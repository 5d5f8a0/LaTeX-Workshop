{
  "deps": [],
  "macros": [
    {
      "name": "newrobustcmd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd*",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd*",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd*",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "robustify",
      "arg": {
        "format": "{}",
        "snippet": "{${1:command}}"
      }
    },
    {
      "name": "protecting",
      "arg": {
        "format": "{}",
        "snippet": "{${1:code}}"
      }
    },
    {
      "name": "defcounter",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:counter}}{${2:integer expression}}"
      }
    },
    {
      "name": "deflength",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:length%cmd}}{${2:glue expression}}"
      }
    },
    {
      "name": "AfterPreamble",
      "arg": {
        "format": "{}",
        "snippet": "{${1:code}}"
      }
    },
    {
      "name": "AtEndPreamble",
      "arg": {
        "format": "{}",
        "snippet": "{${1:code}}"
      }
    },
    {
      "name": "AfterEndPreamble",
      "arg": {
        "format": "{}",
        "snippet": "{${1:code}}"
      }
    },
    {
      "name": "AfterEndDocument",
      "arg": {
        "format": "{}",
        "snippet": "{${1:code}}"
      }
    },
    {
      "name": "AtBeginEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "AtEndEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "AfterEndEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "BeforeBeginEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "cslet",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:command}}"
      }
    },
    {
      "name": "letcs",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:csname}}"
      }
    },
    {
      "name": "csletcs",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:csname}}"
      }
    },
    {
      "name": "csuse",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csname}}"
      }
    },
    {
      "name": "undef",
      "arg": {
        "format": "{}",
        "snippet": "{${1:command}}"
      }
    },
    {
      "name": "gundef",
      "arg": {
        "format": "{}",
        "snippet": "{${1:command}}"
      }
    },
    {
      "name": "csundef",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csname}}"
      }
    },
    {
      "name": "csgundef",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csname}}"
      }
    },
    {
      "name": "csmeaning",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csname}}"
      }
    },
    {
      "name": "csshow",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csname}}"
      }
    },
    {
      "name": "numdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:integer expression}}"
      }
    },
    {
      "name": "numgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:integer expression}}"
      }
    },
    {
      "name": "csnumdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:integer expression}}"
      }
    },
    {
      "name": "csnumgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:integer expression}}"
      }
    },
    {
      "name": "dimdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:dimen expression}}"
      }
    },
    {
      "name": "dimgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:dimen expression}}"
      }
    },
    {
      "name": "csdimdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:dimen expression}}"
      }
    },
    {
      "name": "csdimgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:dimen expression}}"
      }
    },
    {
      "name": "gluedef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:glue expression}}"
      }
    },
    {
      "name": "gluegdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:glue expression}}"
      }
    },
    {
      "name": "csgluedef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:glue expression}}"
      }
    },
    {
      "name": "csgluegdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:glue expression}}"
      }
    },
    {
      "name": "mudef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:muglue expression}}"
      }
    },
    {
      "name": "mugdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:muglue expression}}"
      }
    },
    {
      "name": "csmudef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:muglue expression}}"
      }
    },
    {
      "name": "csmugdef",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:muglue expression}}"
      }
    },
    {
      "name": "expandonce",
      "arg": {
        "format": "{}",
        "snippet": "{${1:command}}"
      }
    },
    {
      "name": "csexpandonce",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csname}}"
      }
    },
    {
      "name": "appto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "gappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "eappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "xappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "csappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csgappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "cseappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csxappto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "preto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "gpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "epreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "xpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "cspreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csgpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csepreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csxpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "patchcmd",
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "{${1:command}}{${2:search}}{${3:replace}}{${4:success}}{${5:failure}}"
      }
    },
    {
      "name": "patchcmd",
      "arg": {
        "format": "[]{}{}{}{}{}",
        "snippet": "[${6:prefix}]{${1:command}}{${2:search}}{${3:replace}}{${4:success}}{${5:failure}}"
      }
    },
    {
      "name": "ifpatchable",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:command}}{${2:search}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifpatchable*",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:command}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "apptocmd",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:command}}{${2:code}}{${3:success}}{${4:failure}}"
      }
    },
    {
      "name": "pretocmd",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:command}}{${2:code}}{${3:success}}{${4:failure}}"
      }
    },
    {
      "name": "tracingpatches"
    },
    {
      "name": "newbool",
      "arg": {
        "format": "{}",
        "snippet": "{${1:bool name}}"
      }
    },
    {
      "name": "providebool",
      "arg": {
        "format": "{}",
        "snippet": "{${1:bool name}}"
      }
    },
    {
      "name": "booltrue",
      "arg": {
        "format": "{}",
        "snippet": "{${1:bool name}}"
      }
    },
    {
      "name": "boolfalse",
      "arg": {
        "format": "{}",
        "snippet": "{${1:bool name}}"
      }
    },
    {
      "name": "setbool",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:bool name}}{${2:true|false}}"
      }
    },
    {
      "name": "ifbool",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:bool name}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "notbool",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:bool name}}{${2:not true}}{${3:not false}}"
      }
    },
    {
      "name": "newtoggle",
      "arg": {
        "format": "{}",
        "snippet": "{${1:toggle name}}"
      }
    },
    {
      "name": "providetoggle",
      "arg": {
        "format": "{}",
        "snippet": "{${1:toggle name}}"
      }
    },
    {
      "name": "toggletrue",
      "arg": {
        "format": "{}",
        "snippet": "{${1:toggle name}}"
      }
    },
    {
      "name": "togglefalse",
      "arg": {
        "format": "{}",
        "snippet": "{${1:toggle name}}"
      }
    },
    {
      "name": "settoggle",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:toggle name}}{${2:true|false}}"
      }
    },
    {
      "name": "iftoggle",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:toggle name}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "nottoggle",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:toggle name}}{${2:not true}}{${3:not false}}"
      }
    },
    {
      "name": "ifdef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsdef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifundef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsundef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefmacro",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsmacro",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefparam",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsparam",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefprefix",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsprefix",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefprotected",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsprotected",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefltxprotect",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsltxprotect",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefempty",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsempty",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefvoid",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsvoid",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:control sequence}}{${2:control sequence}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifcsequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:csname}}{${2:csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdefstring",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:command}}{${2:string}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifcsstring",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:csname}}{${2:string}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdefstrequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:command}}{${2:command}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifcsstrequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:csname}}{${2:csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdefcounter",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcscounter",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifltxcounter",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:counter}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdeflength",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcslength",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefdimen",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsdimen",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifstrequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:string}}{${2:string}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifstrempty",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:string}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifblank",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:string}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "notblank",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:string}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifnumcomp",
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "{${1:integer expression}}{${2:relation}}{${3:integer expression}}{${4:true}}{${5:false}}"
      }
    },
    {
      "name": "ifnumequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:integer expression}}{${2:integer expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifnumgreater",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:integer expression}}{${2:integer expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifnumless",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:integer expression}}{${2:integer expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifnumodd",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:integer expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdimcomp",
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "{${1:dimen expression}}{${2:relation}}{${3:dimen expression}}{${4:true}}{${5:false}}"
      }
    },
    {
      "name": "ifdimequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:dimen expression}}{${2:dimen expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdimgreater",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:dimen expression}}{${2:dimen expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdimless",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:dimen expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifboolexpr",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifboolexpe",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "whileboolexpr",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression}}{${2:code}}"
      }
    },
    {
      "name": "unlessboolexpr",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression}}{${2:code}}"
      }
    },
    {
      "name": "DeclareListParser",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:separator}}"
      }
    },
    {
      "name": "DeclareListParser*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:command}}{${2:separator}}"
      }
    },
    {
      "name": "docsvlist",
      "arg": {
        "format": "{}",
        "snippet": "{${1:csvlist}}"
      }
    },
    {
      "name": "listbreak"
    },
    {
      "name": "forcsvlist",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:handler}}{${2:csvlist}}"
      }
    },
    {
      "name": "listadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listgadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listeadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listxadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listcsadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcsgadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcseadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcsxadd",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listremove",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listgremove",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listcsremove",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcsgremove",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "dolistloop",
      "arg": {
        "format": "{}",
        "snippet": "{${1:list macro}}"
      }
    },
    {
      "name": "dolistcsloop",
      "arg": {
        "format": "{}",
        "snippet": "{${1:list csname}}"
      }
    },
    {
      "name": "forlistloop",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:handler}}{${2:list macro}}"
      }
    },
    {
      "name": "forlistcsloop",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:handler}}{${2:list csname}}"
      }
    },
    {
      "name": "ifinlist",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:item}}{${2:list macro}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "xifinlist",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:item}}{${2:list macro}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifinlistcs",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:item}}{${2:list csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "xifinlistcs",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:item}}{${2:list csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "rmntonum",
      "arg": {
        "format": "{}",
        "snippet": "{${1:numeral}}"
      }
    },
    {
      "name": "ifrmnum",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:string}}{${2:true}}{${3:false}}"
      }
    }
  ],
  "envs": [],
  "keys": {},
  "args": []
}