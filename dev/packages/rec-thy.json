{
  "deps": [
    {
      "name": "ltxcmds"
    },
    {
      "name": "iftex"
    },
    {
      "name": "ifpdf"
    },
    {
      "name": "suffix"
    },
    {
      "name": "ifmtarg"
    },
    {
      "name": "xifthen"
    },
    {
      "name": "xkeyval"
    },
    {
      "name": "etoolbox"
    },
    {
      "name": "pict2e"
    },
    {
      "name": "picture"
    },
    {
      "name": "mathrsfs"
    },
    {
      "name": "mathtools"
    },
    {
      "name": "enumitem"
    },
    {
      "name": "bbm"
    }
  ],
  "macros": [
    {
      "name": "step",
      "if": "steps"
    },
    {
      "name": "step",
      "if": "steps",
      "arg": {
        "format": "[]",
        "snippet": "[${1:label%text}]"
      }
    },
    {
      "name": "abs",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Acompat"
    },
    {
      "name": "Adegrees"
    },
    {
      "name": "Adegreesjump",
      "unusual": true
    },
    {
      "name": "Aeq"
    },
    {
      "name": "Aequiv",
      "unusual": true
    },
    {
      "name": "Ageq"
    },
    {
      "name": "Agneq"
    },
    {
      "name": "Agtr"
    },
    {
      "name": "Aincompat"
    },
    {
      "name": "Aleq"
    },
    {
      "name": "Aless"
    },
    {
      "name": "Alneq"
    },
    {
      "name": "AREAdegrees"
    },
    {
      "name": "aut"
    },
    {
      "name": "Azero",
      "unusual": true
    },
    {
      "name": "Azeroj",
      "unusual": true
    },
    {
      "name": "Azerojj",
      "unusual": true
    },
    {
      "name": "Azerojjj",
      "unusual": true
    },
    {
      "name": "Azeron",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Azerosym",
      "unusual": true
    },
    {
      "name": "baire"
    },
    {
      "name": "Baire"
    },
    {
      "name": "bpfuncs"
    },
    {
      "name": "bstrs"
    },
    {
      "name": "cantor"
    },
    {
      "name": "card",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "case",
      "arg": {
        "format": "[]",
        "snippet": "[${1:label}]"
      }
    },
    {
      "name": "CBderiv",
      "arg": {
        "format": "[sup}{}",
        "snippet": "[sup}{${1:arg}}"
      }
    },
    {
      "name": "CBderiv",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "cbstrs"
    },
    {
      "name": "ce"
    },
    {
      "name": "CEA"
    },
    {
      "name": "CEA"
    },
    {
      "name": "CEA",
      "arg": {
        "format": "[]",
        "snippet": "[${1:n}]"
      }
    },
    {
      "name": "ceil*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "ceil",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "cequiv"
    },
    {
      "name": "code",
      "arg": {
        "format": "{}",
        "snippet": "{${1:string}}"
      }
    },
    {
      "name": "compat"
    },
    {
      "name": "compose"
    },
    {
      "name": "computable"
    },
    {
      "name": "Computable"
    },
    {
      "name": "computablyEnumerable"
    },
    {
      "name": "ComputablyEnumerable"
    },
    {
      "name": "concat"
    },
    {
      "name": "concat",
      "arg": {
        "format": "[]",
        "snippet": "[${1:arg}]"
      }
    },
    {
      "name": "conv"
    },
    {
      "name": "conv",
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "converge",
      "unusual": true
    },
    {
      "name": "converge",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "cornerquote",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "cross"
    },
    {
      "name": "Cross"
    },
    {
      "name": "CrossOrig",
      "unusual": true
    },
    {
      "name": "crossOrig",
      "unusual": true
    },
    {
      "name": "decode",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg}}{${2:sub}}"
      }
    },
    {
      "name": "deltain",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "deltain",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "DeltaN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "DeltaOneN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "DeltaOneN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "DeltaZeroN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "DeltaZeroN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "deltazn",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "deltazn",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "diverge"
    },
    {
      "name": "dom"
    },
    {
      "name": "EmptyStr"
    },
    {
      "name": "ensuretext",
      "arg": {
        "format": "{}",
        "snippet": "{${1:text}}"
      }
    },
    {
      "name": "entersat",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "eq"
    },
    {
      "name": "eq*"
    },
    {
      "name": "eqae",
      "unusual": true
    },
    {
      "name": "eqdef",
      "detail": "‚âù",
      "doc": "Equals by definition"
    },
    {
      "name": "eset"
    },
    {
      "name": "estr"
    },
    {
      "name": "existsinf"
    },
    {
      "name": "existsuniq"
    },
    {
      "name": "FinParFuncs",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:domain}}{${2:range}}"
      }
    },
    {
      "name": "finsets"
    },
    {
      "name": "finSsets",
      "unusual": true
    },
    {
      "name": "floor*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "floor",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "forall*"
    },
    {
      "name": "forallae"
    },
    {
      "name": "forces"
    },
    {
      "name": "forces",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:sup})"
      }
    },
    {
      "name": "forces",
      "arg": {
        "format": "()[]",
        "snippet": "(${2:sup})[${1:sub}]"
      }
    },
    {
      "name": "forces*"
    },
    {
      "name": "forces*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:sup})"
      }
    },
    {
      "name": "forces*",
      "arg": {
        "format": "()[]",
        "snippet": "(${2:sup})[${1:sub}]"
      }
    },
    {
      "name": "forces*",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "forces",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "fpmapsfrom"
    },
    {
      "name": "fpmapsto"
    },
    {
      "name": "godelnum",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "hgt",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Hop",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sub2}]{${1:sub1}}"
      }
    },
    {
      "name": "Hop",
      "arg": {
        "format": "[]{}()",
        "snippet": "[${2:sub2}]{${1:sub1}}(${3:arg})"
      }
    },
    {
      "name": "Hop",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "Hop",
      "arg": {
        "format": "{}()",
        "snippet": "{${1:sub}}(${2:arg})"
      }
    },
    {
      "name": "hyp",
      "unusual": true
    },
    {
      "name": "HYP"
    },
    {
      "name": "iffdef"
    },
    {
      "name": "incompat"
    },
    {
      "name": "infsubset"
    },
    {
      "name": "infsubset*"
    },
    {
      "name": "infsupset"
    },
    {
      "name": "infsupset*"
    },
    {
      "name": "isect"
    },
    {
      "name": "Isect"
    },
    {
      "name": "jjjump",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "jjump",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "join"
    },
    {
      "name": "jump",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "jumpn",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg}}{${2:sup}}"
      }
    },
    {
      "name": "kleeneO"
    },
    {
      "name": "kleeneO",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:sup})"
      }
    },
    {
      "name": "kleeneO",
      "arg": {
        "format": "()[]",
        "snippet": "(${2:sup})[${1:sub}]"
      }
    },
    {
      "name": "kleeneO*"
    },
    {
      "name": "kleeneO*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:sup})"
      }
    },
    {
      "name": "kleeneO*",
      "arg": {
        "format": "()[]",
        "snippet": "(${2:sup})[${1:sub}]"
      }
    },
    {
      "name": "kleeneO*",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "kleeneO",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "kleeneOSYM",
      "unusual": true
    },
    {
      "name": "Land"
    },
    {
      "name": "leftof"
    },
    {
      "name": "leftofeq"
    },
    {
      "name": "lh",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "LLand"
    },
    {
      "name": "llangle",
      "detail": "‚¶â (\"oz\" command)",
      "doc": "Z notation left binding bracket"
    },
    {
      "name": "LLor"
    },
    {
      "name": "logic",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:sub1}}{${2:sub2}}"
      }
    },
    {
      "name": "Lor"
    },
    {
      "name": "Low"
    },
    {
      "name": "Low",
      "arg": {
        "format": "[]",
        "snippet": "[${1:sup%formula}]"
      }
    },
    {
      "name": "LowN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup%formula}]{${1:sub%formula}}"
      }
    },
    {
      "name": "lowN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup%formula}]{${1:sub%formula}}"
      }
    },
    {
      "name": "LowN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub%formula}}"
      }
    },
    {
      "name": "lowN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub%formula}}"
      }
    },
    {
      "name": "majsubset"
    },
    {
      "name": "majsupset"
    },
    {
      "name": "maps",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg1}}{${2:arg2}}"
      }
    },
    {
      "name": "meet"
    },
    {
      "name": "Meet"
    },
    {
      "name": "MnJoin",
      "unusual": true
    },
    {
      "name": "module",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "module",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "murec",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:var%formula}}{${2:condition%formula}}"
      }
    },
    {
      "name": "nAeq"
    },
    {
      "name": "nAgeq"
    },
    {
      "name": "nAincompat",
      "unusual": true
    },
    {
      "name": "nAleq"
    },
    {
      "name": "ncequiv"
    },
    {
      "name": "nconv"
    },
    {
      "name": "nconv",
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "ndownarrow",
      "unusual": true
    },
    {
      "name": "neqae",
      "unusual": true
    },
    {
      "name": "nexistsinf"
    },
    {
      "name": "nexistsuniq"
    },
    {
      "name": "nforall"
    },
    {
      "name": "nforallae"
    },
    {
      "name": "nin"
    },
    {
      "name": "nleftof"
    },
    {
      "name": "nleftofeq"
    },
    {
      "name": "nprecsucc"
    },
    {
      "name": "nrightof"
    },
    {
      "name": "nrightofeq"
    },
    {
      "name": "nSearrow"
    },
    {
      "name": "nsubfun"
    },
    {
      "name": "nsubfuneq"
    },
    {
      "name": "nsubset",
      "detail": "‚äÑ (\"wrisym\" command)",
      "doc": "Not subset, variant [slash negation]"
    },
    {
      "name": "nsuccprec"
    },
    {
      "name": "nsupfun"
    },
    {
      "name": "nsupfuneq"
    },
    {
      "name": "nsupset",
      "detail": "‚äÖ (\"wrisym\" command)",
      "doc": "Not superset, variant [slash negation]"
    },
    {
      "name": "nTeq"
    },
    {
      "name": "nTequiv"
    },
    {
      "name": "nTgeq"
    },
    {
      "name": "nTincompat"
    },
    {
      "name": "nTleq"
    },
    {
      "name": "Oabs*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Oabs",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Oadd"
    },
    {
      "name": "Ofunc",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Ogeq"
    },
    {
      "name": "Ogtr"
    },
    {
      "name": "Ohgt*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Ohgt",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Oleq"
    },
    {
      "name": "Oless"
    },
    {
      "name": "Olim",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg}}{${2:sub}}"
      }
    },
    {
      "name": "Omul"
    },
    {
      "name": "Ongeq"
    },
    {
      "name": "Ongtr"
    },
    {
      "name": "Onleq"
    },
    {
      "name": "Onless"
    },
    {
      "name": "Oplus"
    },
    {
      "name": "Opred",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Ord"
    },
    {
      "name": "ordpair",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg1}}{${2:arg2}}"
      }
    },
    {
      "name": "Ouniq"
    },
    {
      "name": "overbar",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      },
      "detail": "¬†ÃÖ",
      "doc": "Overbar embellishment"
    },
    {
      "name": "pair",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg1}}{${2:arg2}}"
      }
    },
    {
      "name": "ParFuncs",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:domain}}{${2:range}}"
      }
    },
    {
      "name": "piin",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "piin",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "PiN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "PiN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "PiOneN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "PiOneN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "PiZeroN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "PiZeroN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "pizn",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "pizn",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "pmapsfrom"
    },
    {
      "name": "pmapsto"
    },
    {
      "name": "powset",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sub}]{${1:arg}}"
      }
    },
    {
      "name": "powset",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "precsucc"
    },
    {
      "name": "PriorityTree"
    },
    {
      "name": "PriorityTreeModule",
      "unusual": true,
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "PriorityTreeModule",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "promptdif",
      "unusual": true
    },
    {
      "name": "promptminus",
      "unusual": true
    },
    {
      "name": "promptsetminus",
      "unusual": true
    },
    {
      "name": "pruneTree",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "quotient",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg1}}{${2:arg2}}"
      }
    },
    {
      "name": "re"
    },
    {
      "name": "REA"
    },
    {
      "name": "REA"
    },
    {
      "name": "REA",
      "arg": {
        "format": "[]",
        "snippet": "[${1:n}]"
      }
    },
    {
      "name": "REAop*",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:sub2}]{${1:sub1}}{${2:sup}}"
      }
    },
    {
      "name": "REAop*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:sub}}{${2:sup}}"
      }
    },
    {
      "name": "REAop",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:sub2}]{${1:sub1}}{${2:sup}}"
      }
    },
    {
      "name": "REAop",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:sub}}{${2:sup}}"
      }
    },
    {
      "name": "recf",
      "arg": {
        "format": "(){}",
        "snippet": "(${2:sup}){${1:sub}}"
      }
    },
    {
      "name": "recf",
      "arg": {
        "format": "[](){}",
        "snippet": "[${2:sub2}](${3:sup}){${1:sub1}}"
      }
    },
    {
      "name": "recf",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sub2}]{${1:sub1}}"
      }
    },
    {
      "name": "recf",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "recfnl",
      "arg": {
        "format": "[]{}{}{}",
        "snippet": "[${4:sub2}]{${1:sub1}}{${2:arg1}}{${3:arg2}}"
      }
    },
    {
      "name": "recfnl",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:sub}}{${2:arg1}}{${3:arg2}}"
      }
    },
    {
      "name": "recursive"
    },
    {
      "name": "Recursive"
    },
    {
      "name": "recursivelyEnumerable"
    },
    {
      "name": "RecursivelyEnumerable"
    },
    {
      "name": "REdegrees"
    },
    {
      "name": "refreq",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "req*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "req*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "req",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "req",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "require",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "require",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "REset",
      "arg": {
        "format": "(){}",
        "snippet": "(${2:sup}){${1:sub}}"
      }
    },
    {
      "name": "REset",
      "arg": {
        "format": "[](){}",
        "snippet": "[${2:sub2}](${3:sup}){${1:sub1}}"
      }
    },
    {
      "name": "REset",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sub2}]{${1:sub1}}"
      }
    },
    {
      "name": "REset",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "restr",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "rightof"
    },
    {
      "name": "rightofeq"
    },
    {
      "name": "rng"
    },
    {
      "name": "rrangle",
      "detail": "‚¶ä (\"oz\" command)",
      "doc": "Z notation right binding bracket"
    },
    {
      "name": "Searrow",
      "detail": "‚áò (\"txfonts\" command)",
      "doc": "Se pointing double arrow"
    },
    {
      "name": "set",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:left}}{${2:right}}"
      }
    },
    {
      "name": "setbefore",
      "unusual": true
    },
    {
      "name": "setcmp",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "setcol",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg}}{${2:sup}}"
      }
    },
    {
      "name": "setdiff"
    },
    {
      "name": "sigmain",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "sigmain",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "SigmaN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "SigmaN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "SigmaOneN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "SigmaOneN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "SigmaZeroN",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "SigmaZeroN",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "sigmazn",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:sup}]{${1:sub}}"
      }
    },
    {
      "name": "sigmazn",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sub}}"
      }
    },
    {
      "name": "ssetsOfsize",
      "unusual": true
    },
    {
      "name": "st",
      "unusual": true
    },
    {
      "name": "str",
      "arg": {
        "format": "{}",
        "snippet": "{${1:string}}"
      }
    },
    {
      "name": "strcD"
    },
    {
      "name": "strcDa"
    },
    {
      "name": "strcR"
    },
    {
      "name": "strcRa"
    },
    {
      "name": "strpred",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "subfun"
    },
    {
      "name": "subfuneq"
    },
    {
      "name": "subfunneq"
    },
    {
      "name": "subsetnaeq",
      "unusual": true
    },
    {
      "name": "succprec"
    },
    {
      "name": "supfun"
    },
    {
      "name": "supfuneq"
    },
    {
      "name": "supfunneq"
    },
    {
      "name": "supsetnaeq",
      "unusual": true
    },
    {
      "name": "symbf",
      "arg": {
        "format": "{}",
        "snippet": "{${1:text%plain}}"
      }
    },
    {
      "name": "symdiff"
    },
    {
      "name": "Tcompat"
    },
    {
      "name": "Tdeg",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Tdegrees"
    },
    {
      "name": "Tdegreesjump",
      "unusual": true
    },
    {
      "name": "Tdegvar",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Teq"
    },
    {
      "name": "Tequiv"
    },
    {
      "name": "Tgeq"
    },
    {
      "name": "Tgneq"
    },
    {
      "name": "Tgtr"
    },
    {
      "name": "thiscase",
      "unusual": true
    },
    {
      "name": "Tincompat"
    },
    {
      "name": "Tjoin"
    },
    {
      "name": "TJoin"
    },
    {
      "name": "Tjump",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "Tleq"
    },
    {
      "name": "Tless"
    },
    {
      "name": "Tlneq"
    },
    {
      "name": "Tmeet"
    },
    {
      "name": "tpath"
    },
    {
      "name": "tpath",
      "arg": {
        "format": "[]",
        "snippet": "[${1:sub}]"
      }
    },
    {
      "name": "Tplus"
    },
    {
      "name": "TPlus"
    },
    {
      "name": "TreeExt"
    },
    {
      "name": "TreeExtNeq"
    },
    {
      "name": "TreeMod",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:arg1}}{${2:arg2}}"
      }
    },
    {
      "name": "TreeMul"
    },
    {
      "name": "Tsetjoin",
      "unusual": true
    },
    {
      "name": "TsetJoin",
      "unusual": true
    },
    {
      "name": "ttgeq"
    },
    {
      "name": "ttgneq"
    },
    {
      "name": "ttgtr"
    },
    {
      "name": "ttleq"
    },
    {
      "name": "ttless"
    },
    {
      "name": "ttlneq"
    },
    {
      "name": "ttngeq"
    },
    {
      "name": "ttnleq"
    },
    {
      "name": "ttSYM"
    },
    {
      "name": "Tzero"
    },
    {
      "name": "Tzerosym",
      "unusual": true
    },
    {
      "name": "union"
    },
    {
      "name": "Union"
    },
    {
      "name": "use",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "utilde",
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "wck"
    },
    {
      "name": "wforces"
    },
    {
      "name": "wjump",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    },
    {
      "name": "wstrs"
    },
    {
      "name": "xor"
    },
    {
      "name": "zeroj"
    },
    {
      "name": "zerojj"
    },
    {
      "name": "zerojjj"
    },
    {
      "name": "zeron",
      "arg": {
        "format": "{}",
        "snippet": "{${1:sup}}"
      }
    },
    {
      "name": "zerow",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:arg}}"
      }
    }
  ],
  "envs": [
    {
      "name": "steps",
      "if": "steps"
    },
    {
      "name": "steps",
      "if": "steps",
      "arg": {
        "format": "[]",
        "snippet": "[${1:heading%text}]"
      }
    },
    {
      "name": "pfcases*"
    },
    {
      "name": "pfcases"
    },
    {
      "name": "pfcasesnonum",
      "unusual": true
    },
    {
      "name": "pfcasesnumbered",
      "unusual": true
    },
    {
      "name": "require*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "require*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "require",
      "arg": {
        "format": "{}[]{}",
        "snippet": "{${1:letter}}[${3:sup%formula}]{${2:sub%formula}}"
      }
    },
    {
      "name": "require",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:letter}}{${2:sub%formula}}"
      }
    },
    {
      "name": "requirement",
      "arg": {
        "format": "{}",
        "snippet": "{${1:tag}}"
      }
    },
    {
      "name": "requirements*",
      "unusual": true
    },
    {
      "name": "requirements"
    },
    {
      "name": "requirements",
      "arg": {
        "format": "<>",
        "snippet": "<${1:overlay specification}>"
      }
    }
  ],
  "keys": {
    "\\usepackage/rec-thy#c": [
      "nomath",
      "nosymb",
      "nosets",
      "noquants",
      "nospaces",
      "nostrings",
      "notrees",
      "nopair",
      "nosetrels",
      "noordinalnotations",
      "nosyntax",
      "noshortsyntax",
      "noforcing",
      "nodegrees",
      "nocomputations",
      "nostructresets",
      "noreqhelper",
      "nosubfun",
      "nopfcases",
      "noprioritytrees",
      "nohyperreqs",
      "nooperators",
      "nofixtype",
      "nodoubleangles",
      "steps",
      "noshortO",
      "altcompat",
      "norsfs",
      "nobbm",
      "modulescr=${1:csname}",
      "pfcasefont=${1:csname}",
      "reqscr=${1:csname}",
      "recfnlsym=${1:csname}",
      "recfsym=${1:csname}",
      "usesym=${1:csname}",
      "emptystr=${1:csname}",
      "concatsym=${1:csname}",
      "lstrdelim=${1:csname}",
      "rstrdelim=${1:csname}",
      "lcodedelim=${1:csname}",
      "rcodedelim=${1:csname}",
      "lpairdelim=${1:csname}",
      "rpairdelim=${1:csname}"
    ]
  },
  "args": [
    "\\usepackage/rec-thy#c"
  ]
}