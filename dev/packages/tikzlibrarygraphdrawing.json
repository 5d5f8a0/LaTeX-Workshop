{
  "deps": [
    {
      "name": "luatex"
    }
  ],
  "macros": [
    {
      "name": "usegdlibrary",
      "arg": {
        "format": "{}",
        "snippet": "{${1:list of libraries%keyvals}}"
      }
    },
    {
      "name": "pgfgdset",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:options%keyvals}}"
      }
    },
    {
      "name": "pgfgdevent",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:name}}{${2:parameter}}"
      }
    },
    {
      "name": "pgfgdbegineventgroup",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:parameter}}"
      }
    },
    {
      "name": "pgfgdendeventgroup",
      "unusual": true
    },
    {
      "name": "pgfgdeventgroup",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:name}}"
      }
    },
    {
      "name": "pgfgdsetlatenodeoption",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:node name}}"
      }
    },
    {
      "name": "pgfgdcallbackrendernode",
      "unusual": true,
      "arg": {
        "format": "{}{}{}{}{}{}{}{}{}",
        "snippet": "{${1:node name}}{${2:xmin}}{${3:xmax}}{${4:ymin}}{${5:ymax}}{${6:xpos}}{${7:ypos}}{${8:boxnum}}{${9:code}}"
      }
    },
    {
      "name": "pgfpositionnodelatername",
      "unusual": true
    },
    {
      "name": "pgfpositionnodelaterminx",
      "unusual": true
    },
    {
      "name": "pgfpositionnodelatermaxx",
      "unusual": true
    },
    {
      "name": "pgfpositionnodelaterminy",
      "unusual": true
    },
    {
      "name": "pgfpositionnodelatermaxy",
      "unusual": true
    },
    {
      "name": "pgfgdedge",
      "unusual": true,
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "{${1:node1}}{${2:node2}}{${3:edge dir}}{${4:edge opts}}{${5:edge nodes}}"
      }
    },
    {
      "name": "pgfgdsetedgecallback",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:macro}}"
      }
    },
    {
      "name": "pgfgddefaultedgecallback",
      "unusual": true,
      "arg": {
        "format": "{}{}{}{}{}{}{}",
        "snippet": "{${1:node1}}{${2:node2}}{${3:options}}{${4:auxtext}}{${5:alg options}}{${6:bend info}}{${7:animations}}"
      }
    },
    {
      "name": "pgfgdcallbackbeginshipout",
      "unusual": true
    },
    {
      "name": "pgfgdcallbackendshipout",
      "unusual": true
    },
    {
      "name": "pgfgdbeginlayout",
      "unusual": true
    },
    {
      "name": "pgfgdendlayout",
      "unusual": true
    },
    {
      "name": "pgfgdsubgraphnode",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:node name}}{${2:node options}}{${3:node text}}"
      }
    },
    {
      "name": "pgfgdsetrequestcallback",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:macro}}"
      }
    },
    {
      "name": "ifpgfgdgraphdrawingscopeactive",
      "unusual": true
    },
    {
      "name": "pgfgdbeginscope",
      "unusual": true
    },
    {
      "name": "pgfgdendscope",
      "unusual": true
    },
    {
      "name": "pgfgdaddspecificationhook",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:code}}"
      }
    }
  ],
  "envs": [],
  "keys": {
    "\\graph#c,\\tikzgraphsset#c": [
      "node distance=",
      "node pre sep=",
      "node post sep=",
      "node sep=",
      "level distance=",
      "layer distance=",
      "level pre sep=",
      "level post sep=",
      "layer pre sep=",
      "layer post sep=",
      "level sep=",
      "layer sep=",
      "sibling distance=",
      "sibling pre sep=",
      "sibling post sep=",
      "sibling sep=",
      "part distance=",
      "part pre sep=",
      "part post sep=",
      "part sep=",
      "component sep=",
      "component distance=",
      "anchor node=${1:string}\r",
      "anchor at={${1:coord}}\r",
      "orient=${1:direction}\r",
      "orient'=${1:direction}\r",
      "orient tail=${1:string}\r",
      "orient head=${1:string}\r",
      "horizontal=${1:tail} to ${2:head}\r",
      "horizontal'=${1:head} to ${2:tail}\r",
      "vertical=${1:tail} to ${2:head}\r",
      "vertical'=${1:head} to ${2:tail}\r",
      "grow=${1:direction}\r",
      "grow'=${1:direction}\r",
      "componentwise",
      "component order=${1|by first specified node,increasing node number,decreasing node number\r|}",
      "small components first\r",
      "large components first\r",
      "component direction=${1:direction}\r",
      "component align=${1|first node,center,counterclockwise,clockwise,counterclockwise bounding box,clockwise bounding box,\r|}",
      "components go right top aligned\r",
      "components go right absolute top aligned\r",
      "components go right bottom aligned\r",
      "components go right absolute bottom aligned\r",
      "components go right center aligned\r",
      "components go right\r",
      "components go left top aligned\r",
      "components go left absolute top aligned\r",
      "components go left bottom aligned\r",
      "components go left absolute bottom aligned\r",
      "components go left center aligned\r",
      "components go left\r",
      "components go down right aligned\r",
      "components go down absolute right aligned\r",
      "components go down left aligned\r",
      "components go down absolute left aligned\r",
      "components go down center aligned\r",
      "components go down\r",
      "components go up right aligned\r",
      "components go up absolute right aligned\r",
      "components go up left aligned\r",
      "components go up absolute left aligned\r",
      "components go up center aligned\r",
      "components go up\r",
      "component packing=${1|rectangular,skyline\r|}",
      "allow inside edges",
      "nodes behind edges",
      "edges behind nodes\r",
      "random seed=${1:number}\r",
      "variation=${1:number}\r",
      "tree layout\r",
      "missing nodes get space",
      "significant sep=",
      "binary tree layout\r",
      "extended binary tree layout\r",
      "minimum number of children=${1:number}\r",
      "breadth first spanning tree\r",
      "depth first spanning tree\r",
      "root",
      "span priority=${1:number}\r",
      "span edge\r",
      "no span edge\r",
      "span priority ->=${1:number}\r",
      "span priority reversed ->=${1:number}\r",
      "span using directed\r",
      "span using all\r",
      "layered layout\r",
      "depth first cycle removal\r",
      "prioritized greedy cycle removal\r",
      "greedy cycle removal\r",
      "naive greedy cycle removal\r",
      "random greedy cycle removal\r",
      "linear optimization layer assignment\r",
      "minimum height layer assignment\r",
      "sweep crossing minimization\r",
      "linear optimization node positioning\r",
      "polyline layer edge routing\r",
      "iterations=${1:number}\r",
      "initial step length=",
      "cooling factor=${1:number}\r",
      "convergence tolerance=${1:number}\r",
      "spring constant=${1:number}\r",
      "electric force order=${1:number}\r",
      "approximate remote forces",
      "coarsen",
      "minimum coarsening size=${1:number}\r",
      "downsize ratio=${1:number}\r",
      "spring layout\r",
      "spring Hu 2006 layout\r",
      "spring electrical layout\r",
      "spring electrical layout'\r",
      "spring electrical Hu 2006 layout\r",
      "spring electrical Walshaw 2000 layout\r",
      "simple necklace layout\r",
      "phylogenetic tree layout\r",
      "phylogenetic tree by author\r",
      "unweighted pair group method using arithmetic averages\r",
      "upgma\r",
      "balanced minimum evolution\r",
      "balanced nearest neighbour interchange\r",
      "no phylogenetic tree optimization\r",
      "rooted rectangular phylogram\r",
      "rectangular phylogram\r",
      "rooted straight phylogram\r",
      "straight phylogram\r",
      "unrooted rectangular phylogram\r",
      "unrooted straight phylogram\r",
      "evolutionary unit length=",
      "necklace routing\r",
      "simple demo layout\r",
      "simple edge demo layout\r",
      "simple Huffman layout\r",
      "probability=${1:number}\r"
    ]
  },
  "args": []
}