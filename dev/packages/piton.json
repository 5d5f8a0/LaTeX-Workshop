{
  "deps": [
    {
      "name": "l3keys2e"
    },
    {
      "name": "luatexbase"
    },
    {
      "name": "luacode"
    },
    {
      "name": "xcolor"
    },
    {
      "name": "footnote",
      "if": "footnote"
    },
    {
      "name": "footnote",
      "if": "footnote=true"
    },
    {
      "name": "footnotehyper",
      "if": "footnotehyper"
    },
    {
      "name": "footnotehyper",
      "if": "footnotehyper=true"
    }
  ],
  "macros": [
    {
      "name": "piton",
      "arg": {
        "format": "{}",
        "snippet": "{${1:code%definition}}"
      }
    },
    {
      "name": "PitonInputFile",
      "arg": {
        "format": "{}",
        "snippet": "{${1:file}}"
      }
    },
    {
      "name": "PitonInputFile",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:options%keyvals}]{${1:file}}"
      }
    },
    {
      "name": "PitonInputFileTF",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:file}}{${2:true code}}{${3:false code}}"
      }
    },
    {
      "name": "PitonInputFileTF",
      "arg": {
        "format": "[]{}{}{}",
        "snippet": "[${4:options%keyvals}]{${1:file}}{${2:true code}}{${3:false code}}"
      }
    },
    {
      "name": "PitonInputFileT",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:file}}{${2:true code}}"
      }
    },
    {
      "name": "PitonInputFileT",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:options%keyvals}]{${1:file}}{${2:true code}}"
      }
    },
    {
      "name": "PitonInputFileF",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:file}}{${2:false code}}"
      }
    },
    {
      "name": "PitonInputFileF",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:options%keyvals}]{${1:file}}{${2:false code}}"
      }
    },
    {
      "name": "PitonInputFile<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:file}}"
      }
    },
    {
      "name": "PitonInputFile<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:options%keyvals}]{${1:file}}"
      }
    },
    {
      "name": "PitonInputFileTF<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:file}}{${2:true code}}{${3:false code}}"
      }
    },
    {
      "name": "PitonInputFileTF<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "[]{}{}{}",
        "snippet": "[${4:options%keyvals}]{${1:file}}{${2:true code}}{${3:false code}}"
      }
    },
    {
      "name": "PitonInputFileT<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:file}}{${2:true code}}"
      }
    },
    {
      "name": "PitonInputFileT<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:options%keyvals}]{${1:file}}{${2:true code}}"
      }
    },
    {
      "name": "PitonInputFileF<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:file}}{${2:false code}}"
      }
    },
    {
      "name": "PitonInputFileF<overlay spec>",
      "unusual": true,
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:options%keyvals}]{${1:file}}{${2:false code}}"
      }
    },
    {
      "name": "PitonOptions",
      "arg": {
        "format": "{}",
        "snippet": "{${1:options%keyvals}}",
        "keys": [
          "\\PitonOptions",
          "\\PitonOptions,\\begin{Piton}"
        ],
        "keyPos": 0
      }
    },
    {
      "name": "SetPitonStyle",
      "arg": {
        "format": "{}",
        "snippet": "{${1:options%keyvals}}",
        "keys": [
          "\\SetPitonStyle"
        ],
        "keyPos": 0
      }
    },
    {
      "name": "SetPitonStyle",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:language}]{${1:options%keyvals}}",
        "keys": [
          "\\SetPitonStyle"
        ],
        "keyPos": 1
      }
    },
    {
      "name": "PitonStyle",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:style%keyvals}}{${2:text%plain}}",
        "keys": [
          "\\PitonStyle"
        ],
        "keyPos": 0
      }
    },
    {
      "name": "PitonClearUserFunctions"
    },
    {
      "name": "PitonClearUserFunctions",
      "arg": {
        "format": "[]",
        "snippet": "[${1:languages}]"
      }
    },
    {
      "name": "NewPitonEnvironment",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:envname}}{${2:xargs}}{${3:begdef}}{${4:enddef}}"
      }
    },
    {
      "name": "NewPitonLanguage",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:language}}{${2:keyvals}}"
      }
    },
    {
      "name": "SetPitonIdentifier",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:id1,id2,...}}{${2:code}}"
      }
    },
    {
      "name": "SetPitonIdentifier",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:language}]{${1:id1,id2,...}}{${2:code}}"
      }
    }
  ],
  "envs": [
    {
      "name": "Piton"
    },
    {
      "name": "Piton",
      "arg": {
        "format": "[]",
        "snippet": "[${1:options%keyvals}]"
      }
    }
  ],
  "keys": {
    "\\usepackage/piton#c": [
      "footnote\r",
      "footnotehyper\r",
      "beamer"
    ],
    "\\PitonInputFile,\\PitonInputFileTF,\\PitonInputFileT,\\PitonInputFileF": [
      "first-line=${1:integer}\r",
      "last-line=${1:integer}\r",
      "begin-range=${1:content}\r",
      "end-range=${1:content}\r",
      "range=${1:content}\r",
      "marker/include-lines\r"
    ],
    "\\PitonOptions": [
      "comment-latex=${1:string}\r",
      "math-comments",
      "detected-commands={${1:csname1,csname2,...}}\r",
      "line-numbers/absolute\r",
      "marker={${1:options}}\r",
      "marker/beginning=${1:spec}\r",
      "marker/end=${1:spec}\r",
      "begin-escape=${1:character}\r",
      "end-escape=${1:character}\r",
      "begin-escape-math=${1:character}\r",
      "end-escape-math=${1:character}\r",
      "path={${1:list of paths}}\r"
    ],
    "\\begin{Piton}": [
      "line-numbers/start\r"
    ],
    "\\PitonOptions,\\begin{Piton}": [
      "language=",
      "gobble=${1:integer}\r",
      "auto-gobble\r",
      "tabs-auto-gobble\r",
      "env-gobble\r",
      "line-numbers\r",
      "line-numbers={${1:options}}\r",
      "line-numbers/skip-empty-lines",
      "line-numbers/label-empty-lines",
      "line-numbers/resume\r",
      "line-numbers/sep=",
      "splittable\r",
      "splittable=${1:integer}\r",
      "background-color=",
      "prompt-background-color=",
      "width=",
      "left-margin=",
      "tab-size=${1:integer}\r",
      "show-spaces\r",
      "show-spaces-in-strings\r",
      "break-lines-in-Piton\r",
      "break-lines-in-piton\r",
      "break-lines\r",
      "indent-broken-lines\r",
      "end-of-broken-line=${1:symbol}\r",
      "continuation-symbol=${1:symbol}\r",
      "continuation-symbol-on-indentation=${1:symbol}\r",
      "write=${1:file}\r",
      "path-write=${1:path}\r",
      "split-on-empty-lines",
      "split-separation=${1:code}\r"
    ],
    "\\SetPitonStyle": [
      "Number=${1:formatting}\r",
      "String.Short=${1:formatting}\r",
      "String.Long=${1:formatting}\r",
      "String=${1:formatting}\r",
      "String.Doc=${1:formatting}\r",
      "String.Interpol=${1:formatting}\r",
      "Interpol.Inside=${1:formatting}\r",
      "Operator=${1:formatting}\r",
      "Operator.Word=${1:formatting}\r",
      "Name.Builtin=${1:formatting}\r",
      "Name.Decorator=${1:formatting}\r",
      "Name.Namespace=${1:formatting}\r",
      "Name.Class=${1:formatting}\r",
      "Name.Function=${1:formatting}\r",
      "UserFunction=${1:formatting}\r",
      "Exception=${1:formatting}\r",
      "InitialValues=${1:formatting}\r",
      "Comment=${1:formatting}\r",
      "Comment.LaTeX=${1:formatting}\r",
      "Keyword.Constant=${1:formatting}\r",
      "Keyword=${1:formatting}\r",
      "Name.Type=${1:formatting}\r",
      "Name.Field=${1:formatting}\r",
      "Name.Constructor=${1:formatting}\r",
      "Name.Module=${1:formatting}\r",
      "TypeParameter=${1:formatting}\r",
      "Preproc=${1:formatting}\r",
      "Name.Table=${1:formatting}\r",
      "Directive=${1:formatting}\r",
      "FormattingType=${1:formatting}\r",
      "Comment.Math=${1:formatting}\r",
      "Discard=${1:formatting}\r",
      "Identifier=${1:formatting}\r",
      "Keyword2=${1:formatting}\r",
      "Keyword3=${1:formatting}\r",
      "Keyword4=${1:formatting}\r",
      "Keyword5=${1:formatting}\r",
      "Keyword6=${1:formatting}\r",
      "Keyword7=${1:formatting}\r",
      "Keyword8=${1:formatting}\r",
      "Keyword9=${1:formatting}\r",
      "ParseAgain.noCR=${1:formatting}\r",
      "ParseAgain=${1:formatting}\r",
      "Prompt=${1:formatting}\r",
      "Tag=${1:formatting}\r"
    ],
    "\\PitonStyle": [
      "Number\r",
      "String.Short\r",
      "String.Long\r",
      "String\r",
      "String.Doc\r",
      "String.Interpol\r",
      "Interpol.Inside\r",
      "Operator\r",
      "Operator.Word\r",
      "Name.Builtin\r",
      "Name.Decorator\r",
      "Name.Namespace\r",
      "Name.Class\r",
      "Name.Function\r",
      "UserFunction\r",
      "Exception\r",
      "InitialValues\r",
      "Comment\r",
      "Comment.LaTeX\r",
      "Keyword.Constant\r",
      "Keyword\r",
      "Name.Type\r",
      "Name.Field\r",
      "Name.Constructor\r",
      "Name.Module\r",
      "TypeParameter\r",
      "Preproc\r",
      "Name.Table\r",
      "Directive\r",
      "FormattingType\r",
      "Comment.Math\r",
      "Discard\r",
      "Identifier\r",
      "Keyword2\r",
      "Keyword3\r",
      "Keyword4\r",
      "Keyword5\r",
      "Keyword6\r",
      "Keyword7\r",
      "Keyword8\r",
      "Keyword9\r",
      "ParseAgain.noCR\r",
      "ParseAgain\r",
      "Prompt\r",
      "Tag\r"
    ],
    "\\NewPitonLanguage": [
      "morekeywords={${1:list of keywords}}\r",
      "morekeywords=[${1:number}]{${2:list of keywords}}\r",
      "otherkeywords={${1:keywords}}\r",
      "sensitive",
      "keywordsprefix=${1:prefix}\r",
      "moretexcs={${1:list of csnames}}\r",
      "moretexcs=[${1:class number}]{${2:list of csnames}}\r",
      "morestring=${1:delimiter}\r",
      "morestring=[${1:b|d|m|s}]${2:delimiter}\r",
      "morecomment=${1:delimiter(s)}\r",
      "morecomment=[${1:i|l|s|n}]${2:delimiter(s)}\r",
      "moredelim=[${1:type}][${2:style}]${3:delimiters}\r",
      "moredelim=*[${1:type}][${2:style}]${3:delimiters}\r",
      "moredelim=**[${1:type}][${2:style}]${3:delimiters}\r",
      "moredirectives={${1:list of compiler directives}}\r",
      "tag=${1:<char1><char2>}\r",
      "alsodigit={${1:character sequence}}\r",
      "alsoletter={${1:character sequence}}\r",
      "alsoother={${1:character sequence}}\r"
    ]
  },
  "args": [
    "\\usepackage/piton#c"
  ]
}