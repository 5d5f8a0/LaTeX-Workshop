{
  "deps": [
    {
      "name": "amsmath"
    }
  ],
  "macros": [
    {
      "name": "Bqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "Im",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      },
      "detail": "ℑ",
      "doc": "\\mathfrak{i} (eufrak), imaginary part"
    },
    {
      "name": "PV",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "Pmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "Pr",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "Probability",
      "unusual": true
    },
    {
      "name": "Res",
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "Re",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      },
      "detail": "ℜ",
      "doc": "\\mathfrak{r} (eufrak), real part"
    },
    {
      "name": "Residue",
      "unusual": true
    },
    {
      "name": "Tr"
    },
    {
      "name": "Trace",
      "unusual": true
    },
    {
      "name": "abs*",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "abs",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "absolutevalue",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "acomm*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "acomm",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "acommutator",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "acos",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "acos",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "acosecant",
      "unusual": true
    },
    {
      "name": "acosine",
      "unusual": true
    },
    {
      "name": "acot",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "acot",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "acotangent",
      "unusual": true
    },
    {
      "name": "acsc",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "acsc",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "admat",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1,matrix element 2,...}}"
      }
    },
    {
      "name": "anticommutator",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "antidiagonalmatrix",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1,matrix element 2,...}}"
      }
    },
    {
      "name": "arccos",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "arccos",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "arccosecant",
      "unusual": true
    },
    {
      "name": "arccosine",
      "unusual": true
    },
    {
      "name": "arccot",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "arccot",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "arccotangent",
      "unusual": true
    },
    {
      "name": "arccsc",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "arccsc",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "arcsec",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "arcsec",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "arcsecant",
      "unusual": true
    },
    {
      "name": "arcsin",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "arcsin",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "arcsine",
      "unusual": true
    },
    {
      "name": "arctan",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "arctan",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "arctangent",
      "unusual": true
    },
    {
      "name": "argclose"
    },
    {
      "name": "argclose*"
    },
    {
      "name": "argopen"
    },
    {
      "name": "argopen*"
    },
    {
      "name": "asec",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "asec",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "asecant",
      "unusual": true
    },
    {
      "name": "asin",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "asin",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "asine",
      "unusual": true
    },
    {
      "name": "atan",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "atan",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "atangent",
      "unusual": true
    },
    {
      "name": "bmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "bqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "bra*",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "bra",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "braces",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:ldelim}}{${2:rdelim}}{${3:expression}}"
      }
    },
    {
      "name": "braket*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "braket",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression1}}"
      }
    },
    {
      "name": "braket",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "colcount",
      "unusual": true
    },
    {
      "name": "comm*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "comm",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "commutator",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "cos",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "cos",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "cosecant",
      "unusual": true
    },
    {
      "name": "cosh",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "cosh",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "cosine",
      "unusual": true
    },
    {
      "name": "cot",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "cot",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "cotangent",
      "unusual": true
    },
    {
      "name": "coth",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "coth",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "cp",
      "unusual": true
    },
    {
      "name": "cross"
    },
    {
      "name": "crossproduct",
      "unusual": true
    },
    {
      "name": "csc",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "csc",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "csch",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "csch",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "curl",
      "unusual": true
    },
    {
      "name": "curl",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "curl*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "curl*",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "curl",
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "curl",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "dd",
      "unusual": true
    },
    {
      "name": "dd",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "dd",
      "arg": {
        "format": "[]{}",
        "snippet": "[${2:power}]{${1:expression}}"
      }
    },
    {
      "name": "dd",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "derivative",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "det",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "determinant",
      "unusual": true
    },
    {
      "name": "diagonalmatrix",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1,matrix element 2,...}}"
      }
    },
    {
      "name": "differential",
      "unusual": true
    },
    {
      "name": "div",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      },
      "detail": "÷",
      "doc": "Divide sign"
    },
    {
      "name": "div*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "div*",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "div",
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      },
      "detail": "÷",
      "doc": "Divide sign"
    },
    {
      "name": "div",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      },
      "detail": "÷",
      "doc": "Divide sign"
    },
    {
      "name": "divergence",
      "unusual": true
    },
    {
      "name": "divergence",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "divisionsymbol"
    },
    {
      "name": "dmat",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1,matrix element 2,...}}"
      }
    },
    {
      "name": "dotproduct",
      "unusual": true
    },
    {
      "name": "dv*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "dv",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:power}]{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "dv",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "dv",
      "arg": {
        "format": "{}()",
        "snippet": "{${1:expression1}}(${2:expression2})"
      }
    },
    {
      "name": "dv",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "dyad*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "dyad",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "dyad",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "erf",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "ev**",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "ev*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "ev",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "ev",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "eval",
      "arg": {
        "format": "(expression|_{}^{}",
        "snippet": "(expression|_{${1:limit1}}^{${2:limit2}}"
      }
    },
    {
      "name": "eval*",
      "unusual": true,
      "arg": {
        "format": "(expression|_{}^{}",
        "snippet": "(expression|_{${1:limit1}}^{${2:limit2}}"
      }
    },
    {
      "name": "eval*",
      "unusual": true,
      "arg": {
        "format": "[expression|_{}^{}",
        "snippet": "[expression|_{${1:limit1}}^{${2:limit2}}"
      }
    },
    {
      "name": "eval*",
      "unusual": true,
      "arg": {
        "format": "{}_{}^{}",
        "snippet": "{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
      }
    },
    {
      "name": "eval",
      "arg": {
        "format": "[expression|_{}^{}",
        "snippet": "[expression|_{${1:limit1}}^{${2:limit2}}"
      }
    },
    {
      "name": "eval",
      "arg": {
        "format": "{}_{}^{}",
        "snippet": "{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
      }
    },
    {
      "name": "evaluated",
      "unusual": true,
      "arg": {
        "format": "{}_{}^{}",
        "snippet": "{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
      }
    },
    {
      "name": "exp",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "expectationvalue",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "exponential",
      "unusual": true
    },
    {
      "name": "expval*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "expval",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "expval",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "fbraces",
      "unusual": true,
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "{${1:ldelim}}{${2:rdelim}}{${3:symbol}}{${4:expression}}"
      }
    },
    {
      "name": "fderivative",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "fdv*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "fdv",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "fdv",
      "arg": {
        "format": "{}()",
        "snippet": "{${1:expression}}(${2:function})"
      }
    },
    {
      "name": "fdv",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "flatfrac",
      "arg": {
        "format": "{}()",
        "snippet": "{${1:expression1}}(${2:expression2})"
      }
    },
    {
      "name": "functionalderivative",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "grad",
      "unusual": true
    },
    {
      "name": "grad",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "grad*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "grad*",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "grad",
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "grad",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "gradient",
      "unusual": true
    },
    {
      "name": "gradient",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "homework",
      "unusual": true
    },
    {
      "name": "hypcosecant",
      "unusual": true
    },
    {
      "name": "hypcosine",
      "unusual": true
    },
    {
      "name": "hypcotangent",
      "unusual": true
    },
    {
      "name": "hypsecant",
      "unusual": true
    },
    {
      "name": "hypsine",
      "unusual": true
    },
    {
      "name": "hyptangent",
      "unusual": true
    },
    {
      "name": "identitymatrix",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:n}}"
      }
    },
    {
      "name": "imaginary"
    },
    {
      "name": "imat",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:n}}"
      }
    },
    {
      "name": "innerproduct",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "ip*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "ip",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "ket*",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "ket",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "ketbra*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "ketbra",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "laplacian",
      "unusual": true
    },
    {
      "name": "laplacian",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "laplacian*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "laplacian*",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "laplacian",
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "laplacian",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "ln",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "log",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "logarithm",
      "unusual": true
    },
    {
      "name": "lparen",
      "unusual": true,
      "detail": "(",
      "doc": "Left parenthesis"
    },
    {
      "name": "matrixdeterminant",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
      }
    },
    {
      "name": "matrixel*",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "matrixel",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "matrixelement*",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "matrixelement",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "matrixquantity",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4})"
      }
    },
    {
      "name": "matrixquantity",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "matrixtoks",
      "unusual": true
    },
    {
      "name": "mdet",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
      }
    },
    {
      "name": "mel**",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "mel*",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "mel",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}{${3:expression3}}"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\admat{${1:matrix element 1,matrix element 2,matrix element 3,...}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(\\antidiagonalmatrix{${1:matrix element 1,matrix element 2,matrix element 3,...}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(\\diagonalmatrix{${1:matrix element 1,matrix element 2,matrix element 3,...}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\dmat[${2:matrix element}]{${1:matrix element 1,matrix element 2,matrix element 3,...}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\dmat{${1:matrix element 1,matrix element 2,matrix element 3,...}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(\\identitymatrix{${1:number}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\imat{${1:number}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(\\paulimatrix{${1:n}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\pmat{${1:n}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\xmat*{${1:matrix element star for element indices }}{${2:n}}{${3:m}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\xmat{${1:matrix element}}{${2:n}}{${3:m}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(\\xmatrix{${1:matrix element}}{${2:n}}{${3:m}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(\\zeromatrix{${1:n}}{${2:m}})"
      }
    },
    {
      "name": "mqty",
      "arg": {
        "format": "()",
        "snippet": "(\\zmat{${1:n}}{${2:m}})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4})"
      }
    },
    {
      "name": "mqty*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4})"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}]"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "mqty",
      "unusual": true,
      "arg": {
        "format": "||",
        "snippet": "|${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}|"
      }
    },
    {
      "name": "naturallogarithm",
      "unusual": true
    },
    {
      "name": "norm*",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "norm",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "op*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "op",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "opbraces",
      "unusual": true,
      "arg": {
        "format": "{}()",
        "snippet": "{${1:operator}}(${2:expression})"
      }
    },
    {
      "name": "order*",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "order",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "ordersymbol",
      "unusual": true
    },
    {
      "name": "outerproduct",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "partialderivative",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "paulimatrix",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:n}}"
      }
    },
    {
      "name": "paulixmatrix",
      "unusual": true
    },
    {
      "name": "pauliymatrix",
      "unusual": true
    },
    {
      "name": "paulizmatrix",
      "unusual": true
    },
    {
      "name": "pb*",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "pb",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "pderivative",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "pdv*",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:f}}{${2:x}}"
      }
    },
    {
      "name": "pdv",
      "arg": {
        "format": "[]{}{}",
        "snippet": "[${3:power}]{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "pdv",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "pdv",
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:f}}{${2:x}}{${3:y}}"
      }
    },
    {
      "name": "pdv",
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:function}}{${2:expression}}"
      }
    },
    {
      "name": "pmat",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:n}}"
      }
    },
    {
      "name": "pmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "poissonbracket",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:expression1}}{${2:expression2}}"
      }
    },
    {
      "name": "pqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "principalvalue",
      "unusual": true
    },
    {
      "name": "principalvalue",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "pv",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "qall"
    },
    {
      "name": "qall*"
    },
    {
      "name": "qand"
    },
    {
      "name": "qand*"
    },
    {
      "name": "qas"
    },
    {
      "name": "qas*"
    },
    {
      "name": "qassume"
    },
    {
      "name": "qassume*"
    },
    {
      "name": "qc",
      "arg": {
        "format": "{}",
        "snippet": "{${1:word or phrase}}"
      }
    },
    {
      "name": "qcc"
    },
    {
      "name": "qcc*"
    },
    {
      "name": "qcomma",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:word or phrase}}"
      }
    },
    {
      "name": "qelse"
    },
    {
      "name": "qelse*"
    },
    {
      "name": "qeven"
    },
    {
      "name": "qeven*"
    },
    {
      "name": "qfor"
    },
    {
      "name": "qfor*"
    },
    {
      "name": "qgiven"
    },
    {
      "name": "qgiven*"
    },
    {
      "name": "qif"
    },
    {
      "name": "qif*"
    },
    {
      "name": "qin"
    },
    {
      "name": "qin*"
    },
    {
      "name": "qinteger"
    },
    {
      "name": "qinteger*"
    },
    {
      "name": "qlet"
    },
    {
      "name": "qlet*"
    },
    {
      "name": "qodd"
    },
    {
      "name": "qodd*"
    },
    {
      "name": "qor"
    },
    {
      "name": "qor*"
    },
    {
      "name": "qotherwise"
    },
    {
      "name": "qotherwise*"
    },
    {
      "name": "qq*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:word or phrase}}"
      }
    },
    {
      "name": "qq",
      "arg": {
        "format": "{}",
        "snippet": "{${1:word or phrase}}"
      }
    },
    {
      "name": "qqtext*",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:text}}"
      }
    },
    {
      "name": "qqtext",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:text}}"
      }
    },
    {
      "name": "qsince"
    },
    {
      "name": "qsince*"
    },
    {
      "name": "qthen"
    },
    {
      "name": "qthen*"
    },
    {
      "name": "qty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "qty",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${1:expression}]"
      }
    },
    {
      "name": "qty",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "qty",
      "unusual": true,
      "arg": {
        "format": "||",
        "snippet": "|${1:expression}|"
      }
    },
    {
      "name": "quantity",
      "unusual": true
    },
    {
      "name": "qunless"
    },
    {
      "name": "qunless*"
    },
    {
      "name": "qusing"
    },
    {
      "name": "qusing*"
    },
    {
      "name": "rank"
    },
    {
      "name": "real"
    },
    {
      "name": "rowcount",
      "unusual": true
    },
    {
      "name": "rparen",
      "unusual": true,
      "detail": ")",
      "doc": "Right parenthesis"
    },
    {
      "name": "sbmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "sec",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "sec",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "secant",
      "unusual": true
    },
    {
      "name": "sech",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "sech",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "sin",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "sin",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "sine",
      "unusual": true
    },
    {
      "name": "sinh",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "sinh",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "smallmatrixdeterminant",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "smallmatrixquantity",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "smdet",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
      }
    },
    {
      "name": "smqty",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "({${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}})"
      }
    },
    {
      "name": "smqty*",
      "unusual": true,
      "arg": {
        "format": "()",
        "snippet": "({${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}})"
      }
    },
    {
      "name": "smqty",
      "unusual": true,
      "arg": {
        "format": "[]",
        "snippet": "[${2:{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}}]"
      }
    },
    {
      "name": "smqty",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "smqty",
      "unusual": true,
      "arg": {
        "format": "||",
        "snippet": "|${2:{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}}|"
      }
    },
    {
      "name": "sPmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "spmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "svmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "tan",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "tan",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "tangent",
      "unusual": true
    },
    {
      "name": "tanh",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "tanh",
      "arg": {
        "format": "[]()",
        "snippet": "[${1:power}](${2:expression})"
      }
    },
    {
      "name": "tr"
    },
    {
      "name": "tr",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "trace",
      "unusual": true
    },
    {
      "name": "trigbraces",
      "unusual": true,
      "arg": {
        "format": "{}()",
        "snippet": "{${1:operator}}(${2:expression})"
      }
    },
    {
      "name": "trigopt",
      "unusual": true
    },
    {
      "name": "va*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "va",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "var",
      "arg": {
        "format": "()",
        "snippet": "(${1:expression})"
      }
    },
    {
      "name": "var",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "varE",
      "unusual": true
    },
    {
      "name": "variation",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vb*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vb",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vdot"
    },
    {
      "name": "vectorarrow",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vectorbold",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vectorunit",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vev",
      "unusual": true,
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vmqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
      }
    },
    {
      "name": "vnabla",
      "unusual": true
    },
    {
      "name": "vqty",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vu*",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "vu",
      "arg": {
        "format": "{}",
        "snippet": "{${1:expression}}"
      }
    },
    {
      "name": "xmat",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:matrix element}}{${2:n}}{${3:m}}"
      }
    },
    {
      "name": "xmatrix",
      "unusual": true,
      "arg": {
        "format": "{}{}{}",
        "snippet": "{${1:matrix element}}{${2:n}}{${3:m}}"
      }
    },
    {
      "name": "zeromatrix",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:n}}{${2:m}}"
      }
    },
    {
      "name": "zmat",
      "unusual": true,
      "arg": {
        "format": "{}{}",
        "snippet": "{${1:n}}{${2:m}}"
      }
    }
  ],
  "envs": [],
  "keys": {
    "\\usepackage/physics#c": [
      "trig",
      "notrig",
      "uprightdiff",
      "italicdiff",
      "bolddel",
      "arrowdel"
    ]
  },
  "args": [
    "\\usepackage/physics#c"
  ]
}