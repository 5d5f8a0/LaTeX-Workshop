{
  "includes": [
    "amsmath",
    "xparse"
  ],
  "cmds": {
    "Bqty{}": {
      "command": "Bqty{}",
      "snippet": "Bqty{${1:expression}}"
    },
    "Im{}": {
      "command": "Im{}",
      "snippet": "Im{${1:expression}}"
    },
    "PV{}": {
      "command": "PV{}",
      "snippet": "PV{${1:expression}}"
    },
    "Pmqty{}": {
      "command": "Pmqty{}",
      "snippet": "Pmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "Probability": {
      "command": "Probability",
      "snippet": "Probability"
    },
    "Res[]": {
      "command": "Res[]",
      "snippet": "Res[${1:expression}]"
    },
    "Re{}": {
      "command": "Re{}",
      "snippet": "Re{${1:expression}}"
    },
    "Residue": {
      "command": "Residue",
      "snippet": "Residue"
    },
    "Tr": {
      "command": "Tr",
      "snippet": "Tr"
    },
    "Trace": {
      "command": "Trace",
      "snippet": "Trace"
    },
    "abs*{}": {
      "command": "abs*{}",
      "snippet": "abs*{${1:expression}}"
    },
    "abs{}": {
      "command": "abs{}",
      "snippet": "abs{${1:expression}}"
    },
    "absolutevalue{}": {
      "command": "absolutevalue{}",
      "snippet": "absolutevalue{${1:expression}}"
    },
    "acomm*{}{}": {
      "command": "acomm*{}{}",
      "snippet": "acomm*{${1:expression1}}{${2:expression2}}"
    },
    "acomm{}{}": {
      "command": "acomm{}{}",
      "snippet": "acomm{${1:expression1}}{${2:expression2}}"
    },
    "acommutator{}{}": {
      "command": "acommutator{}{}",
      "snippet": "acommutator{${1:expression1}}{${2:expression2}}"
    },
    "acosecant": {
      "command": "acosecant",
      "snippet": "acosecant"
    },
    "acosine": {
      "command": "acosine",
      "snippet": "acosine"
    },
    "acotangent": {
      "command": "acotangent",
      "snippet": "acotangent"
    },
    "admat{}": {
      "command": "admat{}",
      "snippet": "admat{${1:matrix element 1,matrix element 2,...}}"
    },
    "anticommutator{}{}": {
      "command": "anticommutator{}{}",
      "snippet": "anticommutator{${1:expression1}}{${2:expression2}}"
    },
    "antidiagonalmatrix{}": {
      "command": "antidiagonalmatrix{}",
      "snippet": "antidiagonalmatrix{${1:matrix element 1,matrix element 2,...}}"
    },
    "arccosecant": {
      "command": "arccosecant",
      "snippet": "arccosecant"
    },
    "arccosine": {
      "command": "arccosine",
      "snippet": "arccosine"
    },
    "arccotangent": {
      "command": "arccotangent",
      "snippet": "arccotangent"
    },
    "arcsecant": {
      "command": "arcsecant",
      "snippet": "arcsecant"
    },
    "arcsine": {
      "command": "arcsine",
      "snippet": "arcsine"
    },
    "arctangent": {
      "command": "arctangent",
      "snippet": "arctangent"
    },
    "argclose": {
      "command": "argclose",
      "snippet": "argclose"
    },
    "argclose*": {
      "command": "argclose*",
      "snippet": "argclose*"
    },
    "argopen": {
      "command": "argopen",
      "snippet": "argopen"
    },
    "argopen*": {
      "command": "argopen*",
      "snippet": "argopen*"
    },
    "asecant": {
      "command": "asecant",
      "snippet": "asecant"
    },
    "asine": {
      "command": "asine",
      "snippet": "asine"
    },
    "atangent": {
      "command": "atangent",
      "snippet": "atangent"
    },
    "bmqty{}": {
      "command": "bmqty{}",
      "snippet": "bmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "bqty{}": {
      "command": "bqty{}",
      "snippet": "bqty{${1:expression}}"
    },
    "bra*{}": {
      "command": "bra*{}",
      "snippet": "bra*{${1:expression}}"
    },
    "bra{}": {
      "command": "bra{}",
      "snippet": "bra{${1:expression}}"
    },
    "braces{}{}{}": {
      "command": "braces{}{}{}",
      "snippet": "braces{${1:ldelim}}{${2:rdelim}}{${3:expression}}"
    },
    "braket*{}{}": {
      "command": "braket*{}{}",
      "snippet": "braket*{${1:expression1}}{${2:expression2}}"
    },
    "braket{}": {
      "command": "braket{}",
      "snippet": "braket{${1:expression1}}"
    },
    "braket{}{}": {
      "command": "braket{}{}",
      "snippet": "braket{${1:expression1}}{${2:expression2}}"
    },
    "colcount": {
      "command": "colcount",
      "snippet": "colcount"
    },
    "comm*{}{}": {
      "command": "comm*{}{}",
      "snippet": "comm*{${1:expression1}}{${2:expression2}}"
    },
    "comm{}{}": {
      "command": "comm{}{}",
      "snippet": "comm{${1:expression1}}{${2:expression2}}"
    },
    "commutator{}{}": {
      "command": "commutator{}{}",
      "snippet": "commutator{${1:expression1}}{${2:expression2}}"
    },
    "cosecant": {
      "command": "cosecant",
      "snippet": "cosecant"
    },
    "cosine": {
      "command": "cosine",
      "snippet": "cosine"
    },
    "cotangent": {
      "command": "cotangent",
      "snippet": "cotangent"
    },
    "cp": {
      "command": "cp",
      "snippet": "cp"
    },
    "cross": {
      "command": "cross",
      "snippet": "cross"
    },
    "crossproduct": {
      "command": "crossproduct",
      "snippet": "crossproduct"
    },
    "curl": {
      "command": "curl",
      "snippet": "curl"
    },
    "curl*[]": {
      "command": "curl*[]",
      "snippet": "curl*[${1:expression}]"
    },
    "curl[]": {
      "command": "curl[]",
      "snippet": "curl[${1:expression}]"
    },
    "curl{}": {
      "command": "curl{}",
      "snippet": "curl{${1:expression}}"
    },
    "dd": {
      "command": "dd",
      "snippet": "dd",
      "detail": "â…†",
      "documentation": "DOUBLE-STRUCK ITALIC SMALL D"
    },
    "dd[]{}": {
      "command": "dd[]{}",
      "snippet": "dd[${2:power}]{${1:expression}}"
    },
    "dd{}": {
      "command": "dd{}",
      "snippet": "dd{${1:expression}}"
    },
    "derivative{}{}": {
      "command": "derivative{}{}",
      "snippet": "derivative{${1:function}}{${2:expression}}"
    },
    "determinant": {
      "command": "determinant",
      "snippet": "determinant"
    },
    "diagonalmatrix{}": {
      "command": "diagonalmatrix{}",
      "snippet": "diagonalmatrix{${1:matrix element 1,matrix element 2,...}}"
    },
    "differential": {
      "command": "differential",
      "snippet": "differential"
    },
    "div*[]": {
      "command": "div*[]",
      "snippet": "div*[${1:expression}]"
    },
    "div[]": {
      "command": "div[]",
      "snippet": "div[${1:expression}]"
    },
    "div{}": {
      "command": "div{}",
      "snippet": "div{${1:expression}}"
    },
    "divergence": {
      "command": "divergence",
      "snippet": "divergence"
    },
    "divergence{}": {
      "command": "divergence{}",
      "snippet": "divergence{${1:expression}}"
    },
    "divisionsymbol": {
      "command": "divisionsymbol",
      "snippet": "divisionsymbol"
    },
    "dmat{}": {
      "command": "dmat{}",
      "snippet": "dmat{${1:matrix element 1,matrix element 2,...}}"
    },
    "dotproduct": {
      "command": "dotproduct",
      "snippet": "dotproduct"
    },
    "dv*{}{}": {
      "command": "dv*{}{}",
      "snippet": "dv*{${1:function}}{${2:expression}}"
    },
    "dv[]{}{}": {
      "command": "dv[]{}{}",
      "snippet": "dv[${3:power}]{${1:function}}{${2:expression}}"
    },
    "dv{}": {
      "command": "dv{}",
      "snippet": "dv{${1:expression}}"
    },
    "dv{}{}": {
      "command": "dv{}{}",
      "snippet": "dv{${1:function}}{${2:expression}}"
    },
    "dyad*{}{}": {
      "command": "dyad*{}{}",
      "snippet": "dyad*{${1:expression1}}{${2:expression2}}"
    },
    "dyad{}": {
      "command": "dyad{}",
      "snippet": "dyad{${1:expression}}"
    },
    "dyad{}{}": {
      "command": "dyad{}{}",
      "snippet": "dyad{${1:expression1}}{${2:expression2}}"
    },
    "ev**{}{}": {
      "command": "ev**{}{}",
      "snippet": "ev**{${1:expression1}}{${2:expression2}}"
    },
    "ev*{}{}": {
      "command": "ev*{}{}",
      "snippet": "ev*{${1:expression1}}{${2:expression2}}"
    },
    "ev{}": {
      "command": "ev{}",
      "snippet": "ev{${1:expression}}"
    },
    "ev{}{}": {
      "command": "ev{}{}",
      "snippet": "ev{${1:expression1}}{${2:expression2}}"
    },
    "eval*[expression|_{}^{}": {
      "command": "eval*[expression|_{}^{}",
      "snippet": "eval*[expression|_{${1:limit1}}^{${2:limit2}}"
    },
    "eval*{}_{}^{}": {
      "command": "eval*{}_{}^{}",
      "snippet": "eval*{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
    },
    "eval[expression|_{}^{}": {
      "command": "eval[expression|_{}^{}",
      "snippet": "eval[expression|_{${1:limit1}}^{${2:limit2}}"
    },
    "eval{}_{}^{}": {
      "command": "eval{}_{}^{}",
      "snippet": "eval{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
    },
    "evaluated{}_{}^{}": {
      "command": "evaluated{}_{}^{}",
      "snippet": "evaluated{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
    },
    "expectationvalue{}{}": {
      "command": "expectationvalue{}{}",
      "snippet": "expectationvalue{${1:expression1}}{${2:expression2}}"
    },
    "exponential": {
      "command": "exponential",
      "snippet": "exponential"
    },
    "expval*{}{}": {
      "command": "expval*{}{}",
      "snippet": "expval*{${1:expression1}}{${2:expression2}}"
    },
    "expval{}": {
      "command": "expval{}",
      "snippet": "expval{${1:expression}}"
    },
    "expval{}{}": {
      "command": "expval{}{}",
      "snippet": "expval{${1:expression1}}{${2:expression2}}"
    },
    "fbraces{}{}{}{}": {
      "command": "fbraces{}{}{}{}",
      "snippet": "fbraces{${1:ldelim}}{${2:rdelim}}{${3:symbol}}{${4:expression}}"
    },
    "fderivative{}{}": {
      "command": "fderivative{}{}",
      "snippet": "fderivative{${1:function}}{${2:expression}}"
    },
    "fdv*{}{}": {
      "command": "fdv*{}{}",
      "snippet": "fdv*{${1:function}}{${2:expression}}"
    },
    "fdv{}": {
      "command": "fdv{}",
      "snippet": "fdv{${1:expression}}"
    },
    "fdv{}{}": {
      "command": "fdv{}{}",
      "snippet": "fdv{${1:function}}{${2:expression}}"
    },
    "functionalderivative{}{}": {
      "command": "functionalderivative{}{}",
      "snippet": "functionalderivative{${1:function}}{${2:expression}}"
    },
    "grad": {
      "command": "grad",
      "snippet": "grad"
    },
    "grad*[]": {
      "command": "grad*[]",
      "snippet": "grad*[${1:expression}]"
    },
    "grad[]": {
      "command": "grad[]",
      "snippet": "grad[${1:expression}]"
    },
    "grad{}": {
      "command": "grad{}",
      "snippet": "grad{${1:expression}}"
    },
    "gradient": {
      "command": "gradient",
      "snippet": "gradient"
    },
    "gradient{}": {
      "command": "gradient{}",
      "snippet": "gradient{${1:expression}}"
    },
    "homework": {
      "command": "homework",
      "snippet": "homework"
    },
    "hypcosecant": {
      "command": "hypcosecant",
      "snippet": "hypcosecant"
    },
    "hypcosine": {
      "command": "hypcosine",
      "snippet": "hypcosine"
    },
    "hypcotangent": {
      "command": "hypcotangent",
      "snippet": "hypcotangent"
    },
    "hypsecant": {
      "command": "hypsecant",
      "snippet": "hypsecant"
    },
    "hypsine": {
      "command": "hypsine",
      "snippet": "hypsine"
    },
    "hyptangent": {
      "command": "hyptangent",
      "snippet": "hyptangent"
    },
    "identitymatrix{}": {
      "command": "identitymatrix{}",
      "snippet": "identitymatrix{${1:n}}"
    },
    "imaginary": {
      "command": "imaginary",
      "snippet": "imaginary"
    },
    "imat{}": {
      "command": "imat{}",
      "snippet": "imat{${1:n}}"
    },
    "innerproduct{}{}": {
      "command": "innerproduct{}{}",
      "snippet": "innerproduct{${1:expression1}}{${2:expression2}}"
    },
    "ip*{}{}": {
      "command": "ip*{}{}",
      "snippet": "ip*{${1:expression1}}{${2:expression2}}"
    },
    "ip{}{}": {
      "command": "ip{}{}",
      "snippet": "ip{${1:expression1}}{${2:expression2}}"
    },
    "ket*{}": {
      "command": "ket*{}",
      "snippet": "ket*{${1:expression}}"
    },
    "ket{}": {
      "command": "ket{}",
      "snippet": "ket{${1:expression}}"
    },
    "ketbra*{}{}": {
      "command": "ketbra*{}{}",
      "snippet": "ketbra*{${1:expression1}}{${2:expression2}}"
    },
    "ketbra{}{}": {
      "command": "ketbra{}{}",
      "snippet": "ketbra{${1:expression1}}{${2:expression2}}"
    },
    "laplacian": {
      "command": "laplacian",
      "snippet": "laplacian"
    },
    "laplacian*[]": {
      "command": "laplacian*[]",
      "snippet": "laplacian*[${1:expression}]"
    },
    "laplacian[]": {
      "command": "laplacian[]",
      "snippet": "laplacian[${1:expression}]"
    },
    "laplacian{}": {
      "command": "laplacian{}",
      "snippet": "laplacian{${1:expression}}"
    },
    "logarithm": {
      "command": "logarithm",
      "snippet": "logarithm"
    },
    "lparen": {
      "command": "lparen",
      "snippet": "lparen",
      "detail": "(",
      "documentation": "LEFT PARENTHESIS"
    },
    "matrixdeterminant{}": {
      "command": "matrixdeterminant{}",
      "snippet": "matrixdeterminant{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
    },
    "matrixel*{}{}{}": {
      "command": "matrixel*{}{}{}",
      "snippet": "matrixel*{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixel{}{}{}": {
      "command": "matrixel{}{}{}",
      "snippet": "matrixel{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixelement*{}{}{}": {
      "command": "matrixelement*{}{}{}",
      "snippet": "matrixelement*{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixelement{}{}{}": {
      "command": "matrixelement{}{}{}",
      "snippet": "matrixelement{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixquantity{}": {
      "command": "matrixquantity{}",
      "snippet": "matrixquantity{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "matrixtoks": {
      "command": "matrixtoks",
      "snippet": "matrixtoks"
    },
    "mdet{}": {
      "command": "mdet{}",
      "snippet": "mdet{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
    },
    "mel**{}{}{}": {
      "command": "mel**{}{}{}",
      "snippet": "mel**{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "mel*{}{}{}": {
      "command": "mel*{}{}{}",
      "snippet": "mel*{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "mel{}{}{}": {
      "command": "mel{}{}{}",
      "snippet": "mel{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "mqty[]": {
      "command": "mqty[]",
      "snippet": "mqty[${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}]"
    },
    "mqty{}": {
      "command": "mqty{}",
      "snippet": "mqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "mqty": {
      "command": "mqty",
      "snippet": "mqty|matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4|"
    },
    "naturallogarithm": {
      "command": "naturallogarithm",
      "snippet": "naturallogarithm"
    },
    "norm*{}": {
      "command": "norm*{}",
      "snippet": "norm*{${1:expression}}"
    },
    "norm{}": {
      "command": "norm{}",
      "snippet": "norm{${1:expression}}"
    },
    "op*{}{}": {
      "command": "op*{}{}",
      "snippet": "op*{${1:expression1}}{${2:expression2}}"
    },
    "op{}{}": {
      "command": "op{}{}",
      "snippet": "op{${1:expression1}}{${2:expression2}}"
    },
    "order*{}": {
      "command": "order*{}",
      "snippet": "order*{${1:expression}}"
    },
    "order{}": {
      "command": "order{}",
      "snippet": "order{${1:expression}}"
    },
    "ordersymbol": {
      "command": "ordersymbol",
      "snippet": "ordersymbol"
    },
    "outerproduct{}{}": {
      "command": "outerproduct{}{}",
      "snippet": "outerproduct{${1:expression1}}{${2:expression2}}"
    },
    "partialderivative{}{}": {
      "command": "partialderivative{}{}",
      "snippet": "partialderivative{${1:function}}{${2:expression}}"
    },
    "paulimatrix{}": {
      "command": "paulimatrix{}",
      "snippet": "paulimatrix{${1:n}}"
    },
    "paulixmatrix": {
      "command": "paulixmatrix",
      "snippet": "paulixmatrix"
    },
    "pauliymatrix": {
      "command": "pauliymatrix",
      "snippet": "pauliymatrix"
    },
    "paulizmatrix": {
      "command": "paulizmatrix",
      "snippet": "paulizmatrix"
    },
    "pb*{}{}": {
      "command": "pb*{}{}",
      "snippet": "pb*{${1:expression1}}{${2:expression2}}"
    },
    "pb{}{}": {
      "command": "pb{}{}",
      "snippet": "pb{${1:expression1}}{${2:expression2}}"
    },
    "pderivative{}": {
      "command": "pderivative{}",
      "snippet": "pderivative{${1:expression}}"
    },
    "pdv*{}{}": {
      "command": "pdv*{}{}",
      "snippet": "pdv*{${1:f}}{${2:x}}"
    },
    "pdv[]{}{}": {
      "command": "pdv[]{}{}",
      "snippet": "pdv[${3:power}]{${1:function}}{${2:expression}}"
    },
    "pdv{}": {
      "command": "pdv{}",
      "snippet": "pdv{${1:expression}}"
    },
    "pdv{}{}{}": {
      "command": "pdv{}{}{}",
      "snippet": "pdv{${1:f}}{${2:x}}{${3:y}}"
    },
    "pdv{}{}": {
      "command": "pdv{}{}",
      "snippet": "pdv{${1:function}}{${2:expression}}"
    },
    "pmat{}": {
      "command": "pmat{}",
      "snippet": "pmat{${1:n}}"
    },
    "pmqty{}": {
      "command": "pmqty{}",
      "snippet": "pmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "poissonbracket{}{}": {
      "command": "poissonbracket{}{}",
      "snippet": "poissonbracket{${1:expression1}}{${2:expression2}}"
    },
    "pqty{}": {
      "command": "pqty{}",
      "snippet": "pqty{${1:expression}}"
    },
    "principalvalue": {
      "command": "principalvalue",
      "snippet": "principalvalue"
    },
    "principalvalue{}": {
      "command": "principalvalue{}",
      "snippet": "principalvalue{${1:expression}}"
    },
    "pv{}": {
      "command": "pv{}",
      "snippet": "pv{${1:expression}}"
    },
    "qall": {
      "command": "qall",
      "snippet": "qall"
    },
    "qall*": {
      "command": "qall*",
      "snippet": "qall*"
    },
    "qand": {
      "command": "qand",
      "snippet": "qand"
    },
    "qand*": {
      "command": "qand*",
      "snippet": "qand*"
    },
    "qas": {
      "command": "qas",
      "snippet": "qas"
    },
    "qas*": {
      "command": "qas*",
      "snippet": "qas*"
    },
    "qassume": {
      "command": "qassume",
      "snippet": "qassume"
    },
    "qassume*": {
      "command": "qassume*",
      "snippet": "qassume*"
    },
    "qc{}": {
      "command": "qc{}",
      "snippet": "qc{${1:word or phrase}}"
    },
    "qcc": {
      "command": "qcc",
      "snippet": "qcc"
    },
    "qcc*": {
      "command": "qcc*",
      "snippet": "qcc*"
    },
    "qcomma{}": {
      "command": "qcomma{}",
      "snippet": "qcomma{${1:word or phrase}}"
    },
    "qelse": {
      "command": "qelse",
      "snippet": "qelse"
    },
    "qelse*": {
      "command": "qelse*",
      "snippet": "qelse*"
    },
    "qeven": {
      "command": "qeven",
      "snippet": "qeven"
    },
    "qeven*": {
      "command": "qeven*",
      "snippet": "qeven*"
    },
    "qfor": {
      "command": "qfor",
      "snippet": "qfor"
    },
    "qfor*": {
      "command": "qfor*",
      "snippet": "qfor*"
    },
    "qgiven": {
      "command": "qgiven",
      "snippet": "qgiven"
    },
    "qgiven*": {
      "command": "qgiven*",
      "snippet": "qgiven*"
    },
    "qif": {
      "command": "qif",
      "snippet": "qif"
    },
    "qif*": {
      "command": "qif*",
      "snippet": "qif*"
    },
    "qin": {
      "command": "qin",
      "snippet": "qin"
    },
    "qin*": {
      "command": "qin*",
      "snippet": "qin*"
    },
    "qinteger": {
      "command": "qinteger",
      "snippet": "qinteger"
    },
    "qinteger*": {
      "command": "qinteger*",
      "snippet": "qinteger*"
    },
    "qlet": {
      "command": "qlet",
      "snippet": "qlet"
    },
    "qlet*": {
      "command": "qlet*",
      "snippet": "qlet*"
    },
    "qodd": {
      "command": "qodd",
      "snippet": "qodd"
    },
    "qodd*": {
      "command": "qodd*",
      "snippet": "qodd*"
    },
    "qor": {
      "command": "qor",
      "snippet": "qor"
    },
    "qor*": {
      "command": "qor*",
      "snippet": "qor*"
    },
    "qotherwise": {
      "command": "qotherwise",
      "snippet": "qotherwise"
    },
    "qotherwise*": {
      "command": "qotherwise*",
      "snippet": "qotherwise*"
    },
    "qq*{}": {
      "command": "qq*{}",
      "snippet": "qq*{${1:word or phrase}}"
    },
    "qq{}": {
      "command": "qq{}",
      "snippet": "qq{${1:word or phrase}}"
    },
    "qqtext*{}": {
      "command": "qqtext*{}",
      "snippet": "qqtext*{${1:text}}"
    },
    "qqtext{}": {
      "command": "qqtext{}",
      "snippet": "qqtext{${1:text}}"
    },
    "qsince": {
      "command": "qsince",
      "snippet": "qsince"
    },
    "qsince*": {
      "command": "qsince*",
      "snippet": "qsince*"
    },
    "qthen": {
      "command": "qthen",
      "snippet": "qthen"
    },
    "qthen*": {
      "command": "qthen*",
      "snippet": "qthen*"
    },
    "qty[]": {
      "command": "qty[]",
      "snippet": "qty[${1:expression}]"
    },
    "qty{}": {
      "command": "qty{}",
      "snippet": "qty{${1:expression}}"
    },
    "qty": {
      "command": "qty",
      "snippet": "qty|expression|"
    },
    "quantity": {
      "command": "quantity",
      "snippet": "quantity"
    },
    "qunless": {
      "command": "qunless",
      "snippet": "qunless"
    },
    "qunless*": {
      "command": "qunless*",
      "snippet": "qunless*"
    },
    "qusing": {
      "command": "qusing",
      "snippet": "qusing"
    },
    "qusing*": {
      "command": "qusing*",
      "snippet": "qusing*"
    },
    "rank": {
      "command": "rank",
      "snippet": "rank"
    },
    "real": {
      "command": "real",
      "snippet": "real"
    },
    "rowcount": {
      "command": "rowcount",
      "snippet": "rowcount"
    },
    "rparen": {
      "command": "rparen",
      "snippet": "rparen",
      "detail": ")",
      "documentation": "RIGHT PARENTHESIS"
    },
    "sbmqty{}": {
      "command": "sbmqty{}",
      "snippet": "sbmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "secant": {
      "command": "secant",
      "snippet": "secant"
    },
    "sine": {
      "command": "sine",
      "snippet": "sine"
    },
    "smallmatrixdeterminant{}": {
      "command": "smallmatrixdeterminant{}",
      "snippet": "smallmatrixdeterminant{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "smallmatrixquantity{}": {
      "command": "smallmatrixquantity{}",
      "snippet": "smallmatrixquantity{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "smdet{}": {
      "command": "smdet{}",
      "snippet": "smdet{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
    },
    "smqty[{]": {
      "command": "smqty[{]",
      "snippet": "smqty[{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}]"
    },
    "smqty{}": {
      "command": "smqty{}",
      "snippet": "smqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "smqty": {
      "command": "smqty",
      "snippet": "smqty|{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}|"
    },
    "sPmqty{}": {
      "command": "sPmqty{}",
      "snippet": "sPmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "spmqty{}": {
      "command": "spmqty{}",
      "snippet": "spmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "svmqty{}": {
      "command": "svmqty{}",
      "snippet": "svmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "tangent": {
      "command": "tangent",
      "snippet": "tangent"
    },
    "tr": {
      "command": "tr",
      "snippet": "tr"
    },
    "trace": {
      "command": "trace",
      "snippet": "trace"
    },
    "trigopt": {
      "command": "trigopt",
      "snippet": "trigopt"
    },
    "va*{}": {
      "command": "va*{}",
      "snippet": "va*{${1:expression}}"
    },
    "va{}": {
      "command": "va{}",
      "snippet": "va{${1:expression}}"
    },
    "var{}": {
      "command": "var{}",
      "snippet": "var{${1:expression}}"
    },
    "varE": {
      "command": "varE",
      "snippet": "varE"
    },
    "variation{}": {
      "command": "variation{}",
      "snippet": "variation{${1:expression}}"
    },
    "vb*{}": {
      "command": "vb*{}",
      "snippet": "vb*{${1:expression}}"
    },
    "vb{}": {
      "command": "vb{}",
      "snippet": "vb{${1:expression}}"
    },
    "vdot": {
      "command": "vdot",
      "snippet": "vdot"
    },
    "vectorarrow{}": {
      "command": "vectorarrow{}",
      "snippet": "vectorarrow{${1:expression}}"
    },
    "vectorbold{}": {
      "command": "vectorbold{}",
      "snippet": "vectorbold{${1:expression}}"
    },
    "vectorunit{}": {
      "command": "vectorunit{}",
      "snippet": "vectorunit{${1:expression}}"
    },
    "vev{}": {
      "command": "vev{}",
      "snippet": "vev{${1:expression}}"
    },
    "vmqty{}": {
      "command": "vmqty{}",
      "snippet": "vmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "vnabla": {
      "command": "vnabla",
      "snippet": "vnabla"
    },
    "vqty{}": {
      "command": "vqty{}",
      "snippet": "vqty{${1:expression}}"
    },
    "vu*{}": {
      "command": "vu*{}",
      "snippet": "vu*{${1:expression}}"
    },
    "vu{}": {
      "command": "vu{}",
      "snippet": "vu{${1:expression}}"
    },
    "xmat{}{}{}": {
      "command": "xmat{}{}{}",
      "snippet": "xmat{${1:matrix element}}{${2:n}}{${3:m}}"
    },
    "xmatrix{}{}{}": {
      "command": "xmatrix{}{}{}",
      "snippet": "xmatrix{${1:matrix element}}{${2:n}}{${3:m}}"
    },
    "zeromatrix{}{}": {
      "command": "zeromatrix{}{}",
      "snippet": "zeromatrix{${1:n}}{${2:m}}"
    },
    "zmat{}{}": {
      "command": "zmat{}{}",
      "snippet": "zmat{${1:n}}{${2:m}}"
    }
  },
  "envs": {},
  "options": [
    "trig",
    "notrig",
    "uprightdiff",
    "italicdiff",
    "bolddel",
    "arrowdel"
  ]
}