{
  "cmds": {
    "Bqty{}": {
      "command": "Bqty",
      "snippet": "Bqty{${1:expression}}"
    },
    "Im{}": {
      "command": "Im",
      "snippet": "Im{${1:expression}}"
    },
    "PV{}": {
      "command": "PV",
      "snippet": "PV{${1:expression}}"
    },
    "Pmqty{}": {
      "command": "Pmqty",
      "snippet": "Pmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "Probability": {},
    "Res[]": {
      "command": "Res",
      "snippet": "Res[${1:expression}]"
    },
    "Re{}": {
      "command": "Re",
      "snippet": "Re{${1:expression}}"
    },
    "Tr": {},
    "Trace": {},
    "abs*{}": {
      "command": "abs*",
      "snippet": "abs*{${1:expression}}"
    },
    "absolutevalue{}": {
      "command": "absolutevalue",
      "snippet": "absolutevalue{${1:expression}}"
    },
    "abs{}": {
      "command": "abs",
      "snippet": "abs{${1:expression}}"
    },
    "acomm*{}{}": {
      "command": "acomm*",
      "snippet": "acomm*{${1:expression1}}{${2:expression2}}"
    },
    "acomm{}{}": {
      "command": "acomm",
      "snippet": "acomm{${1:expression1}}{${2:expression2}}"
    },
    "acosecant": {},
    "acosine": {},
    "acotangent": {},
    "anticommutator{}{}": {
      "command": "anticommutator",
      "snippet": "anticommutator{${1:expression1}}{${2:expression2}}"
    },
    "arccosecant": {},
    "arccosine": {},
    "arccotangent": {},
    "arcsecant": {},
    "arcsine": {},
    "arctangent": {},
    "asecant": {},
    "asine": {},
    "atangent": {},
    "bmqty{}": {
      "command": "bmqty",
      "snippet": "bmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "bqty{}": {
      "command": "bqty",
      "snippet": "bqty{${1:expression}}"
    },
    "bra*{}": {
      "command": "bra*",
      "snippet": "bra*{${1:expression}}"
    },
    "braket*{}{}": {
      "command": "braket*",
      "snippet": "braket*{${1:expression1}}{${2:expression2}}"
    },
    "braket{}": {
      "command": "braket",
      "snippet": "braket{${1:expression1}}"
    },
    "braket{}{}": {
      "command": "braket",
      "snippet": "braket{${1:expression1}}{${2:expression2}}"
    },
    "bra{}": {
      "command": "bra",
      "snippet": "bra{${1:expression}}"
    },
    "comm*{}{}": {
      "command": "comm*",
      "snippet": "comm*{${1:expression1}}{${2:expression2}}"
    },
    "commutator{}{}": {
      "command": "commutator",
      "snippet": "commutator{${1:expression1}}{${2:expression2}}"
    },
    "comm{}{}": {
      "command": "comm",
      "snippet": "comm{${1:expression1}}{${2:expression2}}"
    },
    "cosecant": {},
    "cosine": {},
    "cotangent": {},
    "cp": {},
    "cross": {},
    "crossproduct": {},
    "curl": {},
    "curl*[]": {
      "command": "curl*",
      "snippet": "curl*[${1:expression}]"
    },
    "curl[]": {
      "command": "curl",
      "snippet": "curl[${1:expression}]"
    },
    "curl{}": {
      "command": "curl",
      "snippet": "curl{${1:expression}}"
    },
    "dd": {
      "detail": "â…†",
      "documentation": "DOUBLE-STRUCK ITALIC SMALL D"
    },
    "dd[]{}": {
      "command": "dd",
      "snippet": "dd[${2:power}]{${1:expression}}"
    },
    "dd{}": {
      "command": "dd",
      "snippet": "dd{${1:expression}}"
    },
    "derivative{}{}": {
      "command": "derivative",
      "snippet": "derivative{${1:function}}{${2:expression}}"
    },
    "determinant": {},
    "differential": {},
    "div*[]": {
      "command": "div*",
      "snippet": "div*[${1:expression}]"
    },
    "div[]": {
      "command": "div",
      "snippet": "div[${1:expression}]"
    },
    "divergence": {},
    "divergence{}": {
      "command": "divergence",
      "snippet": "divergence{${1:expression}}"
    },
    "divisionsymbol": {},
    "div{}": {
      "command": "div",
      "snippet": "div{${1:expression}}"
    },
    "dotproduct": {},
    "dv*{}{}": {
      "command": "dv*",
      "snippet": "dv*{${1:function}}{${2:expression}}"
    },
    "dv[]{}{}": {
      "command": "dv",
      "snippet": "dv[${3:power}]{${1:function}}{${2:expression}}"
    },
    "dv{}": {
      "command": "dv",
      "snippet": "dv{${1:expression}}"
    },
    "dv{}{}": {
      "command": "dv",
      "snippet": "dv{${1:function}}{${2:expression}}"
    },
    "dyad*{}{}": {
      "command": "dyad*",
      "snippet": "dyad*{${1:expression1}}{${2:expression2}}"
    },
    "dyad{}{}": {
      "command": "dyad",
      "snippet": "dyad{${1:expression1}}{${2:expression2}}"
    },
    "dyad{}": {
      "command": "dyad",
      "snippet": "dyad{${1:expression}}"
    },
    "ev**{}{}": {
      "command": "ev**",
      "snippet": "ev**{${1:expression1}}{${2:expression2}}"
    },
    "ev*{}{}": {
      "command": "ev*",
      "snippet": "ev*{${1:expression1}}{${2:expression2}}"
    },
    "eval*[expression|_{}^{}": {
      "command": "eval*",
      "snippet": "eval*[expression|_{${1:limit1}}^{${2:limit2}}"
    },
    "eval*{}_{}^{}": {
      "command": "eval*",
      "snippet": "eval*{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
    },
    "eval[expression|_{}^{}": {
      "command": "eval",
      "snippet": "eval[expression|_{${1:limit1}}^{${2:limit2}}"
    },
    "evaluated{}_{}^{}": {
      "command": "evaluated",
      "snippet": "evaluated{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
    },
    "eval{}_{}^{}": {
      "command": "eval",
      "snippet": "eval{${1:expression}}_{${2:limit1}}^{${3:limit2}}"
    },
    "ev{}{}": {
      "command": "ev",
      "snippet": "ev{${1:expression1}}{${2:expression2}}"
    },
    "ev{}": {
      "command": "ev",
      "snippet": "ev{${1:expression}}"
    },
    "expectationvalue{}{}": {
      "command": "expectationvalue",
      "snippet": "expectationvalue{${1:expression1}}{${2:expression2}}"
    },
    "exponential": {},
    "expval*{}{}": {
      "command": "expval*",
      "snippet": "expval*{${1:expression1}}{${2:expression2}}"
    },
    "expval{}{}": {
      "command": "expval",
      "snippet": "expval{${1:expression1}}{${2:expression2}}"
    },
    "expval{}": {
      "command": "expval",
      "snippet": "expval{${1:expression}}"
    },
    "fdv*{}{}": {
      "command": "fdv*",
      "snippet": "fdv*{${1:function}}{${2:expression}}"
    },
    "fdv{}": {
      "command": "fdv",
      "snippet": "fdv{${1:expression}}"
    },
    "fdv{}{}": {
      "command": "fdv",
      "snippet": "fdv{${1:function}}{${2:expression}}"
    },
    "functionalderivative{}{}": {
      "command": "functionalderivative",
      "snippet": "functionalderivative{${1:function}}{${2:expression}}"
    },
    "grad": {},
    "grad*[]": {
      "command": "grad*",
      "snippet": "grad*[${1:expression}]"
    },
    "grad[]": {
      "command": "grad",
      "snippet": "grad[${1:expression}]"
    },
    "gradient": {},
    "gradient{}": {
      "command": "gradient",
      "snippet": "gradient{${1:expression}}"
    },
    "grad{}": {
      "command": "grad",
      "snippet": "grad{${1:expression}}"
    },
    "hypcosecant": {},
    "hypcosine": {},
    "hypcotangent": {},
    "hypsecant": {},
    "hypsine": {},
    "hyptangent": {},
    "imaginary": {},
    "innerproduct{}{}": {
      "command": "innerproduct",
      "snippet": "innerproduct{${1:expression1}}{${2:expression2}}"
    },
    "ip*{}{}": {
      "command": "ip*",
      "snippet": "ip*{${1:expression1}}{${2:expression2}}"
    },
    "ip{}{}": {
      "command": "ip",
      "snippet": "ip{${1:expression1}}{${2:expression2}}"
    },
    "ket*{}": {
      "command": "ket*",
      "snippet": "ket*{${1:expression}}"
    },
    "ketbra*{}{}": {
      "command": "ketbra*",
      "snippet": "ketbra*{${1:expression1}}{${2:expression2}}"
    },
    "ketbra{}{}": {
      "command": "ketbra",
      "snippet": "ketbra{${1:expression1}}{${2:expression2}}"
    },
    "ket{}": {
      "command": "ket",
      "snippet": "ket{${1:expression}}"
    },
    "laplacian": {},
    "laplacian*[]": {
      "command": "laplacian*",
      "snippet": "laplacian*[${1:expression}]"
    },
    "laplacian[]": {
      "command": "laplacian",
      "snippet": "laplacian[${1:expression}]"
    },
    "laplacian{}": {
      "command": "laplacian",
      "snippet": "laplacian{${1:expression}}"
    },
    "logarithm": {},
    "matrixdeterminant{}": {
      "command": "matrixdeterminant",
      "snippet": "matrixdeterminant{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
    },
    "matrixel*{}{}{}": {
      "command": "matrixel*",
      "snippet": "matrixel*{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixelement*{}{}{}": {
      "command": "matrixelement*",
      "snippet": "matrixelement*{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixelement{}{}{}": {
      "command": "matrixelement",
      "snippet": "matrixelement{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixel{}{}{}": {
      "command": "matrixel",
      "snippet": "matrixel{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "matrixquantity{}": {
      "command": "matrixquantity",
      "snippet": "matrixquantity{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "mdet{}": {
      "command": "mdet",
      "snippet": "mdet{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
    },
    "mel**{}{}{}": {
      "command": "mel**",
      "snippet": "mel**{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "mel*{}{}{}": {
      "command": "mel*",
      "snippet": "mel*{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "mel{}{}{}": {
      "command": "mel",
      "snippet": "mel{${1:expression1}}{${2:expression2}}{${3:expression3}}"
    },
    "mqty[]": {
      "command": "mqty",
      "snippet": "mqty[${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}]"
    },
    "mqty{}": {
      "command": "mqty",
      "snippet": "mqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "mqty": {
      "command": "mqty|matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4|",
      "snippet": "mqty|matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4|"
    },
    "naturallogarithm": {},
    "norm*{}": {
      "command": "norm*",
      "snippet": "norm*{${1:expression}}"
    },
    "norm{}": {
      "command": "norm",
      "snippet": "norm{${1:expression}}"
    },
    "op*{}{}": {
      "command": "op*",
      "snippet": "op*{${1:expression1}}{${2:expression2}}"
    },
    "op{}{}": {
      "command": "op",
      "snippet": "op{${1:expression1}}{${2:expression2}}"
    },
    "order*{}": {
      "command": "order*",
      "snippet": "order*{${1:expression}}"
    },
    "order{}": {
      "command": "order",
      "snippet": "order{${1:expression}}"
    },
    "outerproduct{}{}": {
      "command": "outerproduct",
      "snippet": "outerproduct{${1:expression1}}{${2:expression2}}"
    },
    "partialderivative{}{}": {
      "command": "partialderivative",
      "snippet": "partialderivative{${1:function}}{${2:expression}}"
    },
    "pb*{}{}": {
      "command": "pb*",
      "snippet": "pb*{${1:expression1}}{${2:expression2}}"
    },
    "pb{}{}": {
      "command": "pb",
      "snippet": "pb{${1:expression1}}{${2:expression2}}"
    },
    "pderivative{}": {
      "command": "pderivative",
      "snippet": "pderivative{${1:expression}}"
    },
    "pdv*{}{}": {
      "command": "pdv*",
      "snippet": "pdv*{${1:f}}{${2:x}}"
    },
    "pdv[]{}{}": {
      "command": "pdv",
      "snippet": "pdv[${3:power}]{${1:function}}{${2:expression}}"
    },
    "pdv{}": {
      "command": "pdv",
      "snippet": "pdv{${1:expression}}"
    },
    "pdv{}{}": {
      "command": "pdv",
      "snippet": "pdv{${1:function}}{${2:expression}}"
    },
    "pdv{}{}{}": {
      "command": "pdv",
      "snippet": "pdv{${1:f}}{${2:x}}{${3:y}}"
    },
    "pmqty{}": {
      "command": "pmqty",
      "snippet": "pmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "poissonbracket{}{}": {
      "command": "poissonbracket",
      "snippet": "poissonbracket{${1:expression1}}{${2:expression2}}"
    },
    "pqty{}": {
      "command": "pqty",
      "snippet": "pqty{${1:expression}}"
    },
    "pv{}": {
      "command": "pv",
      "snippet": "pv{${1:expression}}"
    },
    "qall": {},
    "qall*": {},
    "qand": {},
    "qand*": {},
    "qas": {},
    "qas*": {},
    "qassume": {},
    "qassume*": {},
    "qcc": {},
    "qcc*": {},
    "qcomma{}": {
      "command": "qcomma",
      "snippet": "qcomma{${1:word or phrase}}"
    },
    "qc{}": {
      "command": "qc",
      "snippet": "qc{${1:word or phrase}}"
    },
    "qelse": {},
    "qelse*": {},
    "qeven": {},
    "qeven*": {},
    "qfor": {},
    "qfor*": {},
    "qgiven": {},
    "qgiven*": {},
    "qif": {},
    "qif*": {},
    "qin": {},
    "qin*": {},
    "qinteger": {},
    "qinteger*": {},
    "qlet": {},
    "qlet*": {},
    "qodd": {},
    "qodd*": {},
    "qor": {},
    "qor*": {},
    "qotherwise": {},
    "qotherwise*": {},
    "qq*{}": {
      "command": "qq*",
      "snippet": "qq*{${1:word or phrase}}"
    },
    "qq{}": {
      "command": "qq",
      "snippet": "qq{${1:word or phrase}}"
    },
    "qsince": {},
    "qsince*": {},
    "qthen": {},
    "qthen*": {},
    "qty[]": {
      "command": "qty",
      "snippet": "qty[${1:expression}]"
    },
    "qty{}": {
      "command": "qty",
      "snippet": "qty{${1:expression}}"
    },
    "qty": {
      "command": "qty|expression|",
      "snippet": "qty|expression|"
    },
    "quantity": {},
    "qunless": {},
    "qunless*": {},
    "qusing": {},
    "qusing*": {},
    "rank": {},
    "real": {},
    "sPmqty{}": {
      "command": "sPmqty",
      "snippet": "sPmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "sbmqty{}": {
      "command": "sbmqty",
      "snippet": "sbmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "secant": {},
    "sine": {},
    "smallmatrixquantity{}": {
      "command": "smallmatrixquantity",
      "snippet": "smallmatrixquantity{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "smdet{}": {
      "command": "smdet",
      "snippet": "smdet{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element}}"
    },
    "smqty[{]": {
      "command": "smqty",
      "snippet": "smqty[{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}]"
    },
    "smqty{}": {
      "command": "smqty",
      "snippet": "smqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "smqty": {
      "command": "smqty|",
      "snippet": "smqty|{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}|"
    },
    "spmqty{}": {
      "command": "spmqty",
      "snippet": "spmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "svmqty{}": {
      "command": "svmqty",
      "snippet": "svmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "tangent": {},
    "tr": {},
    "trace": {},
    "va*{}": {
      "command": "va*",
      "snippet": "va*{${1:expression}}"
    },
    "variation{}": {
      "command": "variation",
      "snippet": "variation{${1:expression}}"
    },
    "var{}": {
      "command": "var",
      "snippet": "var{${1:expression}}"
    },
    "va{}": {
      "command": "va",
      "snippet": "va{${1:expression}}"
    },
    "vb*{}": {
      "command": "vb*",
      "snippet": "vb*{${1:expression}}"
    },
    "vb{}": {
      "command": "vb",
      "snippet": "vb{${1:expression}}"
    },
    "vdot": {},
    "vectorarrow{}": {
      "command": "vectorarrow",
      "snippet": "vectorarrow{${1:expression}}"
    },
    "vectorbold{}": {
      "command": "vectorbold",
      "snippet": "vectorbold{${1:expression}}"
    },
    "vectorunit{}": {
      "command": "vectorunit",
      "snippet": "vectorunit{${1:expression}}"
    },
    "vmqty{}": {
      "command": "vmqty",
      "snippet": "vmqty{${1:matrix element 1 & matrix element 2  \\\\ matrix element 3 & matrix element 4}}"
    },
    "vqty{}": {
      "command": "vqty",
      "snippet": "vqty{${1:expression}}"
    },
    "vu*{}": {
      "command": "vu*",
      "snippet": "vu*{${1:expression}}"
    },
    "vu{}": {
      "command": "vu",
      "snippet": "vu{${1:expression}}"
    },
    "diagonalmatrix{}": {
      "command": "diagonalmatrix",
      "snippet": "diagonalmatrix{${1:matrix element 1,matrix element 2,...}}"
    },
    "dmat{}": {
      "command": "dmat",
      "snippet": "dmat{${1:matrix element 1,matrix element 2,...}}"
    },
    "antidiagonalmatrix{}": {
      "command": "antidiagonalmatrix",
      "snippet": "antidiagonalmatrix{${1:matrix element 1,matrix element 2,...}}"
    },
    "admat{}": {
      "command": "admat",
      "snippet": "admat{${1:matrix element 1,matrix element 2,...}}"
    },
    "identitymatrix{}": {
      "command": "identitymatrix",
      "snippet": "identitymatrix{${1:n}}"
    },
    "imat{}": {
      "command": "imat",
      "snippet": "imat{${1:n}}"
    },
    "paulimatrix{}": {
      "command": "paulimatrix",
      "snippet": "paulimatrix{${1:n}}"
    },
    "pmat{}": {
      "command": "pmat",
      "snippet": "pmat{${1:n}}"
    },
    "xmatrix{}{}{}": {
      "command": "xmatrix",
      "snippet": "xmatrix{${1:matrix element}}{${2:n}}{${3:m}}"
    },
    "xmat{}{}{}": {
      "command": "xmat",
      "snippet": "xmat{${1:matrix element}}{${2:n}}{${3:m}}"
    },
    "zeromatrix{}{}": {
      "command": "zeromatrix",
      "snippet": "zeromatrix{${1:n}}{${2:m}}"
    },
    "zmat{}{}": {
      "command": "zmat",
      "snippet": "zmat{${1:n}}{${2:m}}"
    }
  },
  "envs": {}
}